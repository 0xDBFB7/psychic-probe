ARM GAS  /tmp/cc9A4eSM.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_MspInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_MspInit:
  24              	.LFB56:
  25              		.cfi_startproc
  26              		@ args = 0, pretend = 0, frame = 0
  27              		@ frame_needed = 0, uses_anonymous_args = 0
  28              		@ link register save eliminated.
  29              		@ sp needed
  30 0000 7047     		bx	lr
  31              		.cfi_endproc
  32              	.LFE56:
  34              		.section	.text.HAL_MspDeInit,"ax",%progbits
  35              		.align	1
  36              		.weak	HAL_MspDeInit
  37              		.syntax unified
  38              		.code	16
  39              		.thumb_func
  40              		.fpu softvfp
  42              	HAL_MspDeInit:
  43              	.LFB38:
  44              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @file    stm32f0xx_hal.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @verbatim
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The HAL contains two APIs categories:
ARM GAS  /tmp/cc9A4eSM.s 			page 2


  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Initialization and de-initialization functions
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Control functions
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @endverbatim
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @attention
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * are permitted provided that the following conditions are met:
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      this list of conditions and the following disclaimer.
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      and/or other materials provided with the distribution.
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      without specific prior written permission.
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #include "stm32f0xx_hal.h"
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @addtogroup STM32F0xx_HAL_Driver
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL HAL
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief HAL module driver.
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private define ------------------------------------------------------------*/
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** 
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief STM32F0xx HAL Driver version number V1.7.0
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_MAIN   (0x01) /*!< [31:24] main version */
ARM GAS  /tmp/cc9A4eSM.s 			page 3


  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB1   (0x07) /*!< [23:16] sub1 version */
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB2   (0x00) /*!< [15:8]  sub2 version */
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_RC     (0x00) /*!< [7:0]  release candidate */ 
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION         ((__STM32F0xx_HAL_VERSION_MAIN << 24U)\
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB1 << 16U)\
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB2 << 8U )\
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_RC))
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define IDCODE_DEVID_MASK    (0x00000FFFU)
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Macros HAL Private Macros
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Private Variables
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __IO uint32_t uwTick;
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    Initialization and de-initialization functions
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****               ##### Initialization and de-initialization functions #####
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    [..]  This section provides functions allowing to:
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           configuration. It initializes the source of time base also when timeout 
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           is needed and the backup domain when enabled.
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) de-Initializes common part of the HAL.
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated 
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           Tick interrupt priority. 
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Systick timer is used by default as source of time base, but user 
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              handled in milliseconds basis.
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
ARM GAS  /tmp/cc9A4eSM.s 			page 4


 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             ISR process will be blocked. 
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****        (++) functions affecting time base configurations are declared as __Weak  
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This function configures the Flash prefetch,
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Configures time base source, NVIC and Low level hardware
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called at the beginning of program after reset and before 
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       the clock configuration
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note The time base configuration is based on HSI clock when exiting from Reset.
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Once done, time base tick start incrementing.
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       In the default implementation,Systick is used as source of time base.
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The tick variable is incremented each 1ms in its ISR.
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Init the low level hardware */
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspInit();
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function de-Initializes common part of the HAL and stops the source
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        of time base.
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is optional.
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
ARM GAS  /tmp/cc9A4eSM.s 			page 5


 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* De-Init the low level hardware */
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspDeInit();
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Initializes the MSP.
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspInit(void)
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  DeInitializes the MSP.
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspDeInit(void)
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  45              		.loc 1 214 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
  50              		.loc 1 218 0
  51              		@ sp needed
  52 0000 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE38:
  56              		.section	.text.HAL_DeInit,"ax",%progbits
  57              		.align	1
  58              		.global	HAL_DeInit
  59              		.syntax unified
  60              		.code	16
  61              		.thumb_func
  62              		.fpu softvfp
  64              	HAL_DeInit:
  65              	.LFB36:
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
  66              		.loc 1 180 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  70              		.loc 1 182 0
ARM GAS  /tmp/cc9A4eSM.s 			page 6


  71 0000 0122     		movs	r2, #1
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
  72              		.loc 1 180 0
  73 0002 10B5     		push	{r4, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 4, -8
  77              		.cfi_offset 14, -4
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  78              		.loc 1 183 0
  79 0004 0024     		movs	r4, #0
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  80              		.loc 1 182 0
  81 0006 064B     		ldr	r3, .L4
  82 0008 5242     		rsbs	r2, r2, #0
  83 000a 1A61     		str	r2, [r3, #16]
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  84              		.loc 1 183 0
  85 000c 1C61     		str	r4, [r3, #16]
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  86              		.loc 1 185 0
  87 000e DA60     		str	r2, [r3, #12]
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  88              		.loc 1 186 0
  89 0010 DC60     		str	r4, [r3, #12]
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
  90              		.loc 1 188 0
  91 0012 9A62     		str	r2, [r3, #40]
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  92              		.loc 1 189 0
  93 0014 9C62     		str	r4, [r3, #40]
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     
  94              		.loc 1 192 0
  95 0016 FFF7FEFF 		bl	HAL_MspDeInit
  96              	.LVL0:
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  97              		.loc 1 196 0
  98              		@ sp needed
  99 001a 2000     		movs	r0, r4
 100 001c 10BD     		pop	{r4, pc}
 101              	.L5:
 102 001e C046     		.align	2
 103              	.L4:
 104 0020 00100240 		.word	1073876992
 105              		.cfi_endproc
 106              	.LFE36:
 108              		.global	__aeabi_uidiv
 109              		.section	.text.HAL_InitTick,"ax",%progbits
 110              		.align	1
 111              		.weak	HAL_InitTick
 112              		.syntax unified
 113              		.code	16
 114              		.thumb_func
 115              		.fpu softvfp
 117              	HAL_InitTick:
 118              	.LFB39:
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
ARM GAS  /tmp/cc9A4eSM.s 			page 7


 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function configures the source of the time base. 
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Tick interrupt priority.
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig(). 
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The the SysTick interrupt must have higher priority (numerically lower) 
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The function is declared as __Weak  to be overwritten  in case of other
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementation  in user file.
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 119              		.loc 1 237 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              	.LVL1:
 124 0000 10B5     		push	{r4, lr}
 125              	.LCFI1:
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 4, -8
 128              		.cfi_offset 14, -4
 129              		.loc 1 237 0
 130 0002 0400     		movs	r4, r0
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000U);
 131              		.loc 1 239 0
 132 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 133              	.LVL2:
 134 0008 FA21     		movs	r1, #250
 135 000a 8900     		lsls	r1, r1, #2
 136 000c FFF7FEFF 		bl	__aeabi_uidiv
 137              	.LVL3:
 138 0010 FFF7FEFF 		bl	HAL_SYSTICK_Config
 139              	.LVL4:
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /*Configure the SysTick IRQ priority */
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0U);
 140              		.loc 1 242 0
 141 0014 0120     		movs	r0, #1
 142 0016 0022     		movs	r2, #0
 143 0018 2100     		movs	r1, r4
 144 001a 4042     		rsbs	r0, r0, #0
 145 001c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 146              	.LVL5:
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    /* Return function status */
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 147              		.loc 1 246 0
 148              		@ sp needed
ARM GAS  /tmp/cc9A4eSM.s 			page 8


 149 0020 0020     		movs	r0, #0
 150              	.LVL6:
 151 0022 10BD     		pop	{r4, pc}
 152              		.cfi_endproc
 153              	.LFE39:
 155              		.section	.text.HAL_Init,"ax",%progbits
 156              		.align	1
 157              		.global	HAL_Init
 158              		.syntax unified
 159              		.code	16
 160              		.thumb_func
 161              		.fpu softvfp
 163              	HAL_Init:
 164              	.LFB35:
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 165              		.loc 1 156 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 169              		.loc 1 159 0
 170 0000 1023     		movs	r3, #16
 171 0002 064A     		ldr	r2, .L8
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 172              		.loc 1 156 0
 173 0004 10B5     		push	{r4, lr}
 174              	.LCFI2:
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 4, -8
 177              		.cfi_offset 14, -4
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 178              		.loc 1 159 0
 179 0006 1168     		ldr	r1, [r2]
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 180              		.loc 1 164 0
 181 0008 0020     		movs	r0, #0
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 182              		.loc 1 159 0
 183 000a 0B43     		orrs	r3, r1
 184 000c 1360     		str	r3, [r2]
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 185              		.loc 1 164 0
 186 000e FFF7FEFF 		bl	HAL_InitTick
 187              	.LVL7:
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 188              		.loc 1 171 0
 189              		@ sp needed
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 190              		.loc 1 167 0
 191 0012 FFF7FEFF 		bl	HAL_MspInit
 192              	.LVL8:
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 193              		.loc 1 171 0
 194 0016 0020     		movs	r0, #0
 195 0018 10BD     		pop	{r4, pc}
 196              	.L9:
 197 001a C046     		.align	2
ARM GAS  /tmp/cc9A4eSM.s 			page 9


 198              	.L8:
 199 001c 00200240 		.word	1073881088
 200              		.cfi_endproc
 201              	.LFE35:
 203              		.section	.text.HAL_IncTick,"ax",%progbits
 204              		.align	1
 205              		.weak	HAL_IncTick
 206              		.syntax unified
 207              		.code	16
 208              		.thumb_func
 209              		.fpu softvfp
 211              	HAL_IncTick:
 212              	.LFB40:
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    HAL Control functions
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                       ##### HAL Control functions #####
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]  This section provides functions allowing to:
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a tick value in millisecond
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a blocking delay in millisecond
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Suspend the time base source interrupt
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Resume the time base source interrupt
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the HAL API driver version
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device identifier
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device revision identifier
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during Sleep mode
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        used as application time base.
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       in Systick ISR.
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_IncTick(void)
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 213              		.loc 1 285 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
ARM GAS  /tmp/cc9A4eSM.s 			page 10


 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uwTick++;
 218              		.loc 1 286 0
 219 0000 024A     		ldr	r2, .L11
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 220              		.loc 1 287 0
 221              		@ sp needed
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uwTick++;
 222              		.loc 1 286 0
 223 0002 1368     		ldr	r3, [r2]
 224 0004 0133     		adds	r3, r3, #1
 225 0006 1360     		str	r3, [r2]
 226              		.loc 1 287 0
 227 0008 7047     		bx	lr
 228              	.L12:
 229 000a C046     		.align	2
 230              	.L11:
 231 000c 00000000 		.word	uwTick
 232              		.cfi_endproc
 233              	.LFE40:
 235              		.section	.text.HAL_GetTick,"ax",%progbits
 236              		.align	1
 237              		.weak	HAL_GetTick
 238              		.syntax unified
 239              		.code	16
 240              		.thumb_func
 241              		.fpu softvfp
 243              	HAL_GetTick:
 244              	.LFB41:
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Provides a tick value in millisecond.
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note   This function is declared as __weak  to be overwritten  in case of other 
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick value
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 245              		.loc 1 296 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTick;
 250              		.loc 1 297 0
 251 0000 014B     		ldr	r3, .L14
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 252              		.loc 1 298 0
 253              		@ sp needed
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTick;
 254              		.loc 1 297 0
 255 0002 1868     		ldr	r0, [r3]
 256              		.loc 1 298 0
 257 0004 7047     		bx	lr
 258              	.L15:
 259 0006 C046     		.align	2
 260              	.L14:
 261 0008 00000000 		.word	uwTick
ARM GAS  /tmp/cc9A4eSM.s 			page 11


 262              		.cfi_endproc
 263              	.LFE41:
 265              		.section	.text.HAL_Delay,"ax",%progbits
 266              		.align	1
 267              		.weak	HAL_Delay
 268              		.syntax unified
 269              		.code	16
 270              		.thumb_func
 271              		.fpu softvfp
 273              	HAL_Delay:
 274              	.LFB42:
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function provides accurate delay (in milliseconds) based 
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        on variable incremented.
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is incremented.
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note ThiS function is declared as __weak to be overwritten in case of other
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_Delay(__IO uint32_t Delay)
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 275              		.loc 1 312 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 8
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279              	.LVL9:
 280 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 281              	.LCFI3:
 282              		.cfi_def_cfa_offset 24
 283              		.cfi_offset 0, -24
 284              		.cfi_offset 1, -20
 285              		.cfi_offset 2, -16
 286              		.cfi_offset 4, -12
 287              		.cfi_offset 5, -8
 288              		.cfi_offset 14, -4
 289              		.loc 1 312 0
 290 0002 0190     		str	r0, [sp, #4]
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 291              		.loc 1 313 0
 292 0004 FFF7FEFF 		bl	HAL_GetTick
 293              	.LVL10:
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t wait = Delay;
 294              		.loc 1 314 0
 295 0008 019C     		ldr	r4, [sp, #4]
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 296              		.loc 1 313 0
 297 000a 0500     		movs	r5, r0
 298              	.LVL11:
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Add a period to guarantee minimum wait */
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****      wait++;
ARM GAS  /tmp/cc9A4eSM.s 			page 12


 299              		.loc 1 319 0
 300 000c 631C     		adds	r3, r4, #1
 301 000e 5A1E     		subs	r2, r3, #1
 302 0010 9341     		sbcs	r3, r3, r2
 303 0012 E418     		adds	r4, r4, r3
 304              	.LVL12:
 305              	.L18:
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 306              		.loc 1 322 0 discriminator 1
 307 0014 FFF7FEFF 		bl	HAL_GetTick
 308              	.LVL13:
 309 0018 401B     		subs	r0, r0, r5
 310 001a A042     		cmp	r0, r4
 311 001c FAD3     		bcc	.L18
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 312              		.loc 1 325 0
 313              		@ sp needed
 314              	.LVL14:
 315              	.LVL15:
 316 001e 37BD     		pop	{r0, r1, r2, r4, r5, pc}
 317              		.cfi_endproc
 318              	.LFE42:
 320              		.section	.text.HAL_SuspendTick,"ax",%progbits
 321              		.align	1
 322              		.weak	HAL_SuspendTick
 323              		.syntax unified
 324              		.code	16
 325              		.thumb_func
 326              		.fpu softvfp
 328              	HAL_SuspendTick:
 329              	.LFB43:
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Suspend Tick increment.
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be disabled and so Tick increment 
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is suspended.
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_SuspendTick(void)
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 330              		.loc 1 339 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Disable SysTick Interrupt */
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 335              		.loc 1 341 0
ARM GAS  /tmp/cc9A4eSM.s 			page 13


 336 0000 0221     		movs	r1, #2
 337 0002 024A     		ldr	r2, .L23
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 338              		.loc 1 342 0
 339              		@ sp needed
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 340              		.loc 1 341 0
 341 0004 1368     		ldr	r3, [r2]
 342 0006 8B43     		bics	r3, r1
 343 0008 1360     		str	r3, [r2]
 344              		.loc 1 342 0
 345 000a 7047     		bx	lr
 346              	.L24:
 347              		.align	2
 348              	.L23:
 349 000c 10E000E0 		.word	-536813552
 350              		.cfi_endproc
 351              	.LFE43:
 353              		.section	.text.HAL_ResumeTick,"ax",%progbits
 354              		.align	1
 355              		.weak	HAL_ResumeTick
 356              		.syntax unified
 357              		.code	16
 358              		.thumb_func
 359              		.fpu softvfp
 361              	HAL_ResumeTick:
 362              	.LFB44:
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Resume Tick increment.
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be enabled and so Tick increment 
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is resumed.
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak  to be overwritten  in case of other
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_ResumeTick(void)
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 363              		.loc 1 355 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              		@ link register save eliminated.
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Enable SysTick Interrupt */
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 368              		.loc 1 357 0
 369 0000 0223     		movs	r3, #2
 370 0002 024A     		ldr	r2, .L26
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 371              		.loc 1 358 0
 372              		@ sp needed
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 373              		.loc 1 357 0
 374 0004 1168     		ldr	r1, [r2]
 375 0006 0B43     		orrs	r3, r1
ARM GAS  /tmp/cc9A4eSM.s 			page 14


 376 0008 1360     		str	r3, [r2]
 377              		.loc 1 358 0
 378 000a 7047     		bx	lr
 379              	.L27:
 380              		.align	2
 381              	.L26:
 382 000c 10E000E0 		.word	-536813552
 383              		.cfi_endproc
 384              	.LFE44:
 386              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 387              		.align	1
 388              		.global	HAL_GetHalVersion
 389              		.syntax unified
 390              		.code	16
 391              		.thumb_func
 392              		.fpu softvfp
 394              	HAL_GetHalVersion:
 395              	.LFB45:
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This method returns the HAL revision
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 396              		.loc 1 365 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              		@ link register save eliminated.
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  return __STM32F0xx_HAL_VERSION;
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 401              		.loc 1 367 0
 402 0000 0048     		ldr	r0, .L29
 403              		@ sp needed
 404 0002 7047     		bx	lr
 405              	.L30:
 406              		.align	2
 407              	.L29:
 408 0004 00000701 		.word	17235968
 409              		.cfi_endproc
 410              	.LFE45:
 412              		.section	.text.HAL_GetREVID,"ax",%progbits
 413              		.align	1
 414              		.global	HAL_GetREVID
 415              		.syntax unified
 416              		.code	16
 417              		.thumb_func
 418              		.fpu softvfp
 420              	HAL_GetREVID:
 421              	.LFB46:
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device revision identifier.
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device revision identifier
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetREVID(void)
ARM GAS  /tmp/cc9A4eSM.s 			page 15


 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 422              		.loc 1 374 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              		@ link register save eliminated.
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 427              		.loc 1 375 0
 428 0000 014B     		ldr	r3, .L32
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 429              		.loc 1 376 0
 430              		@ sp needed
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 431              		.loc 1 375 0
 432 0002 1868     		ldr	r0, [r3]
 433 0004 000C     		lsrs	r0, r0, #16
 434              		.loc 1 376 0
 435 0006 7047     		bx	lr
 436              	.L33:
 437              		.align	2
 438              	.L32:
 439 0008 00580140 		.word	1073829888
 440              		.cfi_endproc
 441              	.LFE46:
 443              		.section	.text.HAL_GetDEVID,"ax",%progbits
 444              		.align	1
 445              		.global	HAL_GetDEVID
 446              		.syntax unified
 447              		.code	16
 448              		.thumb_func
 449              		.fpu softvfp
 451              	HAL_GetDEVID:
 452              	.LFB47:
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device identifier.
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetDEVID(void)
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 453              		.loc 1 383 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457              		@ link register save eliminated.
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 458              		.loc 1 384 0
 459 0000 024B     		ldr	r3, .L35
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 460              		.loc 1 385 0
 461              		@ sp needed
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 462              		.loc 1 384 0
 463 0002 1868     		ldr	r0, [r3]
 464 0004 0005     		lsls	r0, r0, #20
 465 0006 000D     		lsrs	r0, r0, #20
 466              		.loc 1 385 0
ARM GAS  /tmp/cc9A4eSM.s 			page 16


 467 0008 7047     		bx	lr
 468              	.L36:
 469 000a C046     		.align	2
 470              	.L35:
 471 000c 00580140 		.word	1073829888
 472              		.cfi_endproc
 473              	.LFE47:
 475              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 476              		.align	1
 477              		.global	HAL_GetUIDw0
 478              		.syntax unified
 479              		.code	16
 480              		.thumb_func
 481              		.fpu softvfp
 483              	HAL_GetUIDw0:
 484              	.LFB48:
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 485              		.loc 1 392 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489              		@ link register save eliminated.
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 490              		.loc 1 393 0
 491 0000 014B     		ldr	r3, .L38
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 492              		.loc 1 394 0
 493              		@ sp needed
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 494              		.loc 1 393 0
 495 0002 1868     		ldr	r0, [r3]
 496              		.loc 1 394 0
 497 0004 7047     		bx	lr
 498              	.L39:
 499 0006 C046     		.align	2
 500              	.L38:
 501 0008 ACF7FF1F 		.word	536868780
 502              		.cfi_endproc
 503              	.LFE48:
 505              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 506              		.align	1
 507              		.global	HAL_GetUIDw1
 508              		.syntax unified
 509              		.code	16
 510              		.thumb_func
 511              		.fpu softvfp
 513              	HAL_GetUIDw1:
 514              	.LFB49:
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
ARM GAS  /tmp/cc9A4eSM.s 			page 17


 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 515              		.loc 1 401 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 0
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519              		@ link register save eliminated.
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 520              		.loc 1 402 0
 521 0000 014B     		ldr	r3, .L41
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 522              		.loc 1 403 0
 523              		@ sp needed
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 524              		.loc 1 402 0
 525 0002 1868     		ldr	r0, [r3]
 526              		.loc 1 403 0
 527 0004 7047     		bx	lr
 528              	.L42:
 529 0006 C046     		.align	2
 530              	.L41:
 531 0008 B0F7FF1F 		.word	536868784
 532              		.cfi_endproc
 533              	.LFE49:
 535              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 536              		.align	1
 537              		.global	HAL_GetUIDw2
 538              		.syntax unified
 539              		.code	16
 540              		.thumb_func
 541              		.fpu softvfp
 543              	HAL_GetUIDw2:
 544              	.LFB50:
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 545              		.loc 1 410 0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              		@ link register save eliminated.
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 550              		.loc 1 411 0
 551 0000 014B     		ldr	r3, .L44
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 552              		.loc 1 412 0
 553              		@ sp needed
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 554              		.loc 1 411 0
 555 0002 1868     		ldr	r0, [r3]
 556              		.loc 1 412 0
ARM GAS  /tmp/cc9A4eSM.s 			page 18


 557 0004 7047     		bx	lr
 558              	.L45:
 559 0006 C046     		.align	2
 560              	.L44:
 561 0008 B4F7FF1F 		.word	536868788
 562              		.cfi_endproc
 563              	.LFE50:
 565              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 566              		.align	1
 567              		.global	HAL_DBGMCU_EnableDBGStopMode
 568              		.syntax unified
 569              		.code	16
 570              		.thumb_func
 571              		.fpu softvfp
 573              	HAL_DBGMCU_EnableDBGStopMode:
 574              	.LFB51:
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode       
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 575              		.loc 1 419 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 580              		.loc 1 420 0
 581 0000 0223     		movs	r3, #2
 582 0002 024A     		ldr	r2, .L47
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 583              		.loc 1 421 0
 584              		@ sp needed
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 585              		.loc 1 420 0
 586 0004 5168     		ldr	r1, [r2, #4]
 587 0006 0B43     		orrs	r3, r1
 588 0008 5360     		str	r3, [r2, #4]
 589              		.loc 1 421 0
 590 000a 7047     		bx	lr
 591              	.L48:
 592              		.align	2
 593              	.L47:
 594 000c 00580140 		.word	1073829888
 595              		.cfi_endproc
 596              	.LFE51:
 598              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 599              		.align	1
 600              		.global	HAL_DBGMCU_DisableDBGStopMode
 601              		.syntax unified
 602              		.code	16
 603              		.thumb_func
 604              		.fpu softvfp
 606              	HAL_DBGMCU_DisableDBGStopMode:
 607              	.LFB52:
ARM GAS  /tmp/cc9A4eSM.s 			page 19


 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode       
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 608              		.loc 1 428 0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              		@ link register save eliminated.
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 613              		.loc 1 429 0
 614 0000 0221     		movs	r1, #2
 615 0002 024A     		ldr	r2, .L50
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 616              		.loc 1 430 0
 617              		@ sp needed
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 618              		.loc 1 429 0
 619 0004 5368     		ldr	r3, [r2, #4]
 620 0006 8B43     		bics	r3, r1
 621 0008 5360     		str	r3, [r2, #4]
 622              		.loc 1 430 0
 623 000a 7047     		bx	lr
 624              	.L51:
 625              		.align	2
 626              	.L50:
 627 000c 00580140 		.word	1073829888
 628              		.cfi_endproc
 629              	.LFE52:
 631              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 632              		.align	1
 633              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 634              		.syntax unified
 635              		.code	16
 636              		.thumb_func
 637              		.fpu softvfp
 639              	HAL_DBGMCU_EnableDBGStandbyMode:
 640              	.LFB53:
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode       
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 641              		.loc 1 437 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645              		@ link register save eliminated.
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 646              		.loc 1 438 0
 647 0000 0423     		movs	r3, #4
 648 0002 024A     		ldr	r2, .L53
ARM GAS  /tmp/cc9A4eSM.s 			page 20


 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 649              		.loc 1 439 0
 650              		@ sp needed
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 651              		.loc 1 438 0
 652 0004 5168     		ldr	r1, [r2, #4]
 653 0006 0B43     		orrs	r3, r1
 654 0008 5360     		str	r3, [r2, #4]
 655              		.loc 1 439 0
 656 000a 7047     		bx	lr
 657              	.L54:
 658              		.align	2
 659              	.L53:
 660 000c 00580140 		.word	1073829888
 661              		.cfi_endproc
 662              	.LFE53:
 664              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 665              		.align	1
 666              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 667              		.syntax unified
 668              		.code	16
 669              		.thumb_func
 670              		.fpu softvfp
 672              	HAL_DBGMCU_DisableDBGStandbyMode:
 673              	.LFB54:
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode       
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 674              		.loc 1 446 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              		@ link register save eliminated.
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 679              		.loc 1 447 0
 680 0000 0421     		movs	r1, #4
 681 0002 024A     		ldr	r2, .L56
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 682              		.loc 1 448 0
 683              		@ sp needed
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 684              		.loc 1 447 0
 685 0004 5368     		ldr	r3, [r2, #4]
 686 0006 8B43     		bics	r3, r1
 687 0008 5360     		str	r3, [r2, #4]
 688              		.loc 1 448 0
 689 000a 7047     		bx	lr
 690              	.L57:
 691              		.align	2
 692              	.L56:
 693 000c 00580140 		.word	1073829888
 694              		.cfi_endproc
 695              	.LFE54:
ARM GAS  /tmp/cc9A4eSM.s 			page 21


 697              		.comm	uwTick,4,4
 698              		.text
 699              	.Letext0:
 700              		.file 2 "/home/arthurdent/Programs/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/machin
 701              		.file 3 "/home/arthurdent/Programs/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_s
 702              		.file 4 "Drivers/CMSIS/Include/core_cm0.h"
 703              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 704              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 705              		.file 7 "/home/arthurdent/Programs/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/lo
 706              		.file 8 "/home/arthurdent/Programs/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_t
 707              		.file 9 "/home/arthurdent/Programs/gcc-arm-none-eabi-6-2017-q1-update/lib/gcc/arm-none-eabi/6.3.1/
 708              		.file 10 "/home/arthurdent/Programs/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/r
 709              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 710              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 711              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /tmp/cc9A4eSM.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal.c
     /tmp/cc9A4eSM.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/cc9A4eSM.s:23     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/cc9A4eSM.s:35     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/cc9A4eSM.s:42     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/cc9A4eSM.s:57     .text.HAL_DeInit:0000000000000000 $t
     /tmp/cc9A4eSM.s:64     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/cc9A4eSM.s:104    .text.HAL_DeInit:0000000000000020 $d
     /tmp/cc9A4eSM.s:110    .text.HAL_InitTick:0000000000000000 $t
     /tmp/cc9A4eSM.s:117    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/cc9A4eSM.s:156    .text.HAL_Init:0000000000000000 $t
     /tmp/cc9A4eSM.s:163    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/cc9A4eSM.s:199    .text.HAL_Init:000000000000001c $d
     /tmp/cc9A4eSM.s:204    .text.HAL_IncTick:0000000000000000 $t
     /tmp/cc9A4eSM.s:211    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/cc9A4eSM.s:231    .text.HAL_IncTick:000000000000000c $d
                            *COM*:0000000000000004 uwTick
     /tmp/cc9A4eSM.s:236    .text.HAL_GetTick:0000000000000000 $t
     /tmp/cc9A4eSM.s:243    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/cc9A4eSM.s:261    .text.HAL_GetTick:0000000000000008 $d
     /tmp/cc9A4eSM.s:266    .text.HAL_Delay:0000000000000000 $t
     /tmp/cc9A4eSM.s:273    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/cc9A4eSM.s:321    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/cc9A4eSM.s:328    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/cc9A4eSM.s:349    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/cc9A4eSM.s:354    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/cc9A4eSM.s:361    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/cc9A4eSM.s:382    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/cc9A4eSM.s:387    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/cc9A4eSM.s:394    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/cc9A4eSM.s:408    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/cc9A4eSM.s:413    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/cc9A4eSM.s:420    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/cc9A4eSM.s:439    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/cc9A4eSM.s:444    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/cc9A4eSM.s:451    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/cc9A4eSM.s:471    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/cc9A4eSM.s:476    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/cc9A4eSM.s:483    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/cc9A4eSM.s:501    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/cc9A4eSM.s:506    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/cc9A4eSM.s:513    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/cc9A4eSM.s:531    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/cc9A4eSM.s:536    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/cc9A4eSM.s:543    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/cc9A4eSM.s:561    .text.HAL_GetUIDw2:0000000000000008 $d
     /tmp/cc9A4eSM.s:566    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/cc9A4eSM.s:573    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/cc9A4eSM.s:594    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/cc9A4eSM.s:599    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/cc9A4eSM.s:606    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/cc9A4eSM.s:627    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/cc9A4eSM.s:632    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/cc9A4eSM.s:639    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/cc9A4eSM.s:660    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/cc9A4eSM.s:665    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
ARM GAS  /tmp/cc9A4eSM.s 			page 23


     /tmp/cc9A4eSM.s:672    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/cc9A4eSM.s:693    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
