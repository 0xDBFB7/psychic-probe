ARM GAS  /tmp/cc7mRyRM.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_rcc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_RCC_DeInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_RCC_DeInit:
  24              	.LFB35:
  25              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @file    stm32f0xx_hal_rcc.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *       
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim                
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           derived from the System clock (RTC, ADC, I2C, USART, TIM, USB FS, etc..)
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                       ##### RCC Limitations #####
ARM GAS  /tmp/cc7mRyRM.s 			page 2


  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       from/to registers.
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       Workarounds:
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @attention
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      without specific prior written permission.
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************  
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** */
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #include "stm32f0xx_hal.h"
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @addtogroup STM32F0xx_HAL_Driver
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC RCC
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** * @brief RCC HAL module driver
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
ARM GAS  /tmp/cc7mRyRM.s 			page 3


  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  * @{
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  */
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim    
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (HSE, HSI, HSI14, HSI48, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, 
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       AHB and APB1).
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the PLL as System clock source.
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           The HSI clock can be used also to clock the USART and I2C peripherals.
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSI14 (high-speed internal), 14 MHz factory-trimmed RC used directly to clock 
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the ADC peripheral.
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  /tmp/cc7mRyRM.s 			page 4


 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock source.
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) PLL (clocked by HSI, HSI48 or HSE), featuring different output clocks:
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The first output is used to generate the high speed system clock (up to 48 MHz)
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The second output is used to generate the clock for the USB FS (48 MHz)
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The third output may be used to generate the clock for the TIM, I2C and USART 
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             peripherals (up to 48 MHz)
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M0 NMI 
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSE, LSI, LSE or PLL
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock (divided by 2) output on pin (such as PA8 pin).
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           HSE and PLL.
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) clock is derived
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) All the peripheral clocks are derived from the System clock (SYSCLK) except:
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The FLASH program/erase clock  which is always HSI 8MHz clock.
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The USB 48 MHz clock which is derived from the PLL VCO clock.
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The USART clock which can be derived as well from HSI 8MHz, LSI or LSE.
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The I2C clock which can be derived as well from HSI 8MHz clock.
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The ADC clock which is derived from PLL output.
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The RTC clock which is derived from the LSE, LSI or 1 MHz HSE_RTC
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****              (HSE divided by a programmable prescaler). The System clock (SYSCLK)
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****              frequency must be higher or equal to the RTC clock frequency.
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) IWDG clock which is always the LSI clock.
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) For the STM32F0xx devices, the maximum frequency of the SYSCLK, HCLK and PCLK1 is 48 MHz,
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           prefetch is disabled.
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /*
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           +-----------------------------------------------+
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           | Latency       | SYSCLK clock frequency (MHz)  |
ARM GAS  /tmp/cc7mRyRM.s 			page 5


 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |---------------|-------------------------------|
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |---------------|-------------------------------|
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           +-----------------------------------------------+
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - HSE and PLL OFF
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - AHB, APB1 prescaler set to 1.
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - All interrupts disabled
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - Peripheral clocks
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_DeInit(void)
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
  26              		.loc 1 226 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set HSION bit, HSITRIM[4:0] bits to the reset value*/
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION | RCC_CR_HSITRIM_4); 
  31              		.loc 1 228 0
  32 0000 8122     		movs	r2, #129
  33 0002 0C4B     		ldr	r3, .L2
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE[2:0] and MCOSEL[2:0] bits */
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW | RCC_CFGR_HPRE | RCC_CFGR_PPRE | RCC_CFGR_MCO);
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset HSEON, CSSON, PLLON bits */
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON | RCC_CR_CSSON | RCC_CR_HSEON);
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR register */
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR2 register */
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR3 register */
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR3);
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Disable all interrupts */
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
ARM GAS  /tmp/cc7mRyRM.s 			page 6


  34              		.loc 1 253 0
  35              		@ sp needed
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  36              		.loc 1 228 0
  37 0004 1968     		ldr	r1, [r3]
  38 0006 0A43     		orrs	r2, r1
  39 0008 1A60     		str	r2, [r3]
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  40              		.loc 1 231 0
  41 000a 5A68     		ldr	r2, [r3, #4]
  42 000c 0A49     		ldr	r1, .L2+4
  43 000e 0A40     		ands	r2, r1
  44 0010 5A60     		str	r2, [r3, #4]
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
  45              		.loc 1 234 0
  46 0012 1A68     		ldr	r2, [r3]
  47 0014 0949     		ldr	r1, .L2+8
  48 0016 0A40     		ands	r2, r1
  49 0018 1A60     		str	r2, [r3]
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  50              		.loc 1 237 0
  51 001a 1A68     		ldr	r2, [r3]
  52 001c 0849     		ldr	r1, .L2+12
  53 001e 0A40     		ands	r2, r1
  54 0020 1A60     		str	r2, [r3]
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
  55              		.loc 1 240 0
  56 0022 0022     		movs	r2, #0
  57 0024 5A60     		str	r2, [r3, #4]
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
  58              		.loc 1 243 0
  59 0026 DA62     		str	r2, [r3, #44]
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
  60              		.loc 1 246 0
  61 0028 1A63     		str	r2, [r3, #48]
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  62              		.loc 1 249 0
  63 002a 9A60     		str	r2, [r3, #8]
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
  64              		.loc 1 252 0
  65 002c 054A     		ldr	r2, .L2+16
  66 002e 064B     		ldr	r3, .L2+20
  67 0030 1A60     		str	r2, [r3]
  68              		.loc 1 253 0
  69 0032 7047     		bx	lr
  70              	.L3:
  71              		.align	2
  72              	.L2:
  73 0034 00100240 		.word	1073876992
  74 0038 0CF8FFF0 		.word	-251660276
  75 003c FFFFF6FE 		.word	-17367041
  76 0040 FFFFFBFF 		.word	-262145
  77 0044 00127A00 		.word	8000000
  78 0048 00000000 		.word	SystemCoreClock
  79              		.cfi_endproc
  80              	.LFE35:
  82              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
ARM GAS  /tmp/cc7mRyRM.s 			page 7


  83              		.align	1
  84              		.global	HAL_RCC_OscConfig
  85              		.syntax unified
  86              		.code	16
  87              		.thumb_func
  88              		.fpu softvfp
  90              	HAL_RCC_OscConfig:
  91              	.LFB36:
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HAL status
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
  92              		.loc 1 270 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 16
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              	.LVL0:
  97 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  98              	.LCFI0:
  99              		.cfi_def_cfa_offset 20
 100              		.cfi_offset 4, -20
 101              		.cfi_offset 5, -16
 102              		.cfi_offset 6, -12
 103              		.cfi_offset 7, -8
 104              		.cfi_offset 14, -4
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****    uint32_t tickstart = 0U;
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 105              		.loc 1 278 0
 106 0002 0368     		ldr	r3, [r0]
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****    uint32_t tickstart = 0U;
 107              		.loc 1 270 0
 108 0004 85B0     		sub	sp, sp, #20
 109              	.LCFI1:
 110              		.cfi_def_cfa_offset 40
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****    uint32_t tickstart = 0U;
 111              		.loc 1 270 0
 112 0006 0500     		movs	r5, r0
 113              		.loc 1 278 0
ARM GAS  /tmp/cc7mRyRM.s 			page 8


 114 0008 DB07     		lsls	r3, r3, #31
 115 000a 2FD4     		bmi	.L5
 116              	.LVL1:
 117              	.L10:
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        /* Check the HSE State */
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSE is ready */
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 118              		.loc 1 330 0
ARM GAS  /tmp/cc7mRyRM.s 			page 9


 119 000c 2B68     		ldr	r3, [r5]
 120 000e 9B07     		lsls	r3, r3, #30
 121 0010 00D5     		bpl	.LCB78
 122 0012 81E0     		b	.L6	@long jump
 123              	.LCB78:
 124              	.L21:
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI State */
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI is ready */
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                 
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
ARM GAS  /tmp/cc7mRyRM.s 			page 10


 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 125              		.loc 1 395 0
 126 0014 2B68     		ldr	r3, [r5]
 127 0016 1B07     		lsls	r3, r3, #28
 128 0018 00D5     		bpl	.LCB85
 129 001a BCE0     		b	.L31	@long jump
 130              	.LCB85:
 131              	.L37:
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSI State */
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
ARM GAS  /tmp/cc7mRyRM.s 			page 11


 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 132              		.loc 1 437 0
 133 001c 2B68     		ldr	r3, [r5]
 134 001e 5B07     		lsls	r3, r3, #29
 135 0020 00D5     		bpl	.LCB92
 136 0022 DFE0     		b	.L32	@long jump
 137              	.LCB92:
 138              	.L40:
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       pwrclkchanged = SET;
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
ARM GAS  /tmp/cc7mRyRM.s 			page 12


 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI14 Configuration --------------------------*/
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 139              		.loc 1 509 0
 140 0024 2B68     		ldr	r3, [r5]
 141 0026 DB06     		lsls	r3, r3, #27
 142 0028 1AD5     		bpl	.L57
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the HSI14 State */
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 143              		.loc 1 516 0
 144 002a 6A69     		ldr	r2, [r5, #20]
 145 002c B54C     		ldr	r4, .L100
 146 002e 0423     		movs	r3, #4
 147 0030 012A     		cmp	r2, #1
 148 0032 00D0     		beq	.LCB104
 149 0034 4BE1     		b	.L58	@long jump
 150              	.LCB104:
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 151              		.loc 1 519 0
 152 0036 616B     		ldr	r1, [r4, #52]
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable the Internal High Speed oscillator (HSI). */
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_ENABLE();
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
ARM GAS  /tmp/cc7mRyRM.s 			page 13


 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till HSI is ready */  
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 153              		.loc 1 528 0
 154 0038 0226     		movs	r6, #2
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 155              		.loc 1 519 0
 156 003a 0B43     		orrs	r3, r1
 157 003c 6363     		str	r3, [r4, #52]
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 158              		.loc 1 522 0
 159 003e 636B     		ldr	r3, [r4, #52]
 160 0040 1A43     		orrs	r2, r3
 161 0042 6263     		str	r2, [r4, #52]
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 162              		.loc 1 525 0
 163 0044 FFF7FEFF 		bl	HAL_GetTick
 164              	.LVL2:
 165 0048 0700     		movs	r7, r0
 166              	.LVL3:
 167              	.L59:
 168              		.loc 1 528 0
 169 004a 636B     		ldr	r3, [r4, #52]
 170 004c 3342     		tst	r3, r6
 171 004e 00D1     		bne	.LCB122
 172 0050 36E1     		b	.L60	@long jump
 173              	.LCB122:
 174              	.LVL4:
 175              	.L96:
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }      
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       } 
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable ADC control of the Internal High Speed oscillator HSI14 */
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_ENABLE();
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 176              		.loc 1 545 0
 177 0052 F821     		movs	r1, #248
 178 0054 626B     		ldr	r2, [r4, #52]
 179 0056 AB69     		ldr	r3, [r5, #24]
 180 0058 8A43     		bics	r2, r1
 181 005a DB00     		lsls	r3, r3, #3
 182 005c 1343     		orrs	r3, r2
 183 005e 6363     		str	r3, [r4, #52]
 184              	.L57:
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
ARM GAS  /tmp/cc7mRyRM.s 			page 14


 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable the Internal High Speed oscillator (HSI). */
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_DISABLE();
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till HSI is ready */  
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI48 Configuration --------------------------*/
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* When the HSI48 is used as system clock it is not allowed to be disabled */
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSC
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET) && (RCC_OscInitStruct->HSI48State != RCC_
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI48 State */
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI48). */
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI48_ENABLE();
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI48 is ready */  
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         } 
ARM GAS  /tmp/cc7mRyRM.s 			page 15


 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI48). */
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI48_DISABLE();
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI48 is ready */  
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 185              		.loc 1 629 0
 186 0060 296A     		ldr	r1, [r5, #32]
 187 0062 0029     		cmp	r1, #0
 188 0064 00D0     		beq	.LCB138
 189 0066 59E1     		b	.L65	@long jump
 190              	.LCB138:
 191              	.LVL5:
 192              	.L71:
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     { 
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Check the parameters */
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the main PLL. */
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
ARM GAS  /tmp/cc7mRyRM.s 			page 16


 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Enable the main PLL. */
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is ready */
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the main PLL. */
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return HAL_OK;
 193              		.loc 1 699 0
 194 0068 0020     		movs	r0, #0
 195 006a 13E0     		b	.L93
 196              	.LVL6:
 197              	.L5:
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 198              		.loc 1 284 0
 199 006c 0C21     		movs	r1, #12
 200 006e A54C     		ldr	r4, .L100
 201 0070 6268     		ldr	r2, [r4, #4]
ARM GAS  /tmp/cc7mRyRM.s 			page 17


 202 0072 0A40     		ands	r2, r1
 203 0074 042A     		cmp	r2, #4
 204 0076 06D0     		beq	.L8
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 205              		.loc 1 285 0
 206 0078 6368     		ldr	r3, [r4, #4]
 207 007a 0B40     		ands	r3, r1
 208 007c 082B     		cmp	r3, #8
 209 007e 0BD1     		bne	.L9
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 210              		.loc 1 285 0 is_stmt 0 discriminator 1
 211 0080 6368     		ldr	r3, [r4, #4]
 212 0082 DB03     		lsls	r3, r3, #15
 213 0084 08D5     		bpl	.L9
 214              	.L8:
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 215              		.loc 1 287 0 is_stmt 1
 216 0086 2368     		ldr	r3, [r4]
 217 0088 9B03     		lsls	r3, r3, #14
 218 008a BFD5     		bpl	.L10
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 219              		.loc 1 287 0 is_stmt 0 discriminator 1
 220 008c 6B68     		ldr	r3, [r5, #4]
 221 008e 002B     		cmp	r3, #0
 222 0090 BCD1     		bne	.L10
 223              	.LVL7:
 224              	.L25:
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 225              		.loc 1 289 0 is_stmt 1
 226 0092 0120     		movs	r0, #1
 227              	.LVL8:
 228              	.L93:
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 229              		.loc 1 700 0
 230 0094 05B0     		add	sp, sp, #20
 231              		@ sp needed
 232 0096 F0BD     		pop	{r4, r5, r6, r7, pc}
 233              	.LVL9:
 234              	.L9:
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 235              		.loc 1 295 0
 236 0098 6B68     		ldr	r3, [r5, #4]
 237 009a 012B     		cmp	r3, #1
 238 009c 13D1     		bne	.L12
 239              	.L99:
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 240              		.loc 1 295 0 is_stmt 0 discriminator 5
 241 009e 8023     		movs	r3, #128
 242 00a0 2268     		ldr	r2, [r4]
 243 00a2 5B02     		lsls	r3, r3, #9
 244 00a4 1343     		orrs	r3, r2
 245              	.L97:
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 246              		.loc 1 295 0 discriminator 6
 247 00a6 2360     		str	r3, [r4]
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 248              		.loc 1 302 0 is_stmt 1 discriminator 6
ARM GAS  /tmp/cc7mRyRM.s 			page 18


 249 00a8 FFF7FEFF 		bl	HAL_GetTick
 250              	.LVL10:
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 251              		.loc 1 305 0 discriminator 6
 252 00ac 8026     		movs	r6, #128
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 253              		.loc 1 302 0 discriminator 6
 254 00ae 0700     		movs	r7, r0
 255              	.LVL11:
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 256              		.loc 1 305 0 discriminator 6
 257 00b0 B602     		lsls	r6, r6, #10
 258              	.LVL12:
 259              	.L17:
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 260              		.loc 1 305 0 is_stmt 0
 261 00b2 2368     		ldr	r3, [r4]
 262 00b4 3342     		tst	r3, r6
 263 00b6 A9D1     		bne	.L10
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 264              		.loc 1 307 0 is_stmt 1
 265 00b8 FFF7FEFF 		bl	HAL_GetTick
 266              	.LVL13:
 267 00bc C01B     		subs	r0, r0, r7
 268 00be 6428     		cmp	r0, #100
 269 00c0 F7D9     		bls	.L17
 270              	.LVL14:
 271              	.L19:
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 272              		.loc 1 309 0
 273 00c2 0320     		movs	r0, #3
 274 00c4 E6E7     		b	.L93
 275              	.LVL15:
 276              	.L12:
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 277              		.loc 1 295 0 discriminator 2
 278 00c6 002B     		cmp	r3, #0
 279 00c8 16D1     		bne	.L14
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 280              		.loc 1 295 0 is_stmt 0 discriminator 3
 281 00ca 2368     		ldr	r3, [r4]
 282 00cc 8E4A     		ldr	r2, .L100+4
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 283              		.loc 1 319 0 is_stmt 1 discriminator 3
 284 00ce 8026     		movs	r6, #128
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 285              		.loc 1 295 0 discriminator 3
 286 00d0 1340     		ands	r3, r2
 287 00d2 2360     		str	r3, [r4]
 288 00d4 2368     		ldr	r3, [r4]
 289 00d6 8D4A     		ldr	r2, .L100+8
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 290              		.loc 1 319 0 discriminator 3
 291 00d8 B602     		lsls	r6, r6, #10
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 292              		.loc 1 295 0 discriminator 3
 293 00da 1340     		ands	r3, r2
ARM GAS  /tmp/cc7mRyRM.s 			page 19


 294 00dc 2360     		str	r3, [r4]
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 295              		.loc 1 316 0 discriminator 3
 296 00de FFF7FEFF 		bl	HAL_GetTick
 297              	.LVL16:
 298 00e2 0700     		movs	r7, r0
 299              	.LVL17:
 300              	.L15:
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 301              		.loc 1 319 0
 302 00e4 2368     		ldr	r3, [r4]
 303 00e6 3342     		tst	r3, r6
 304 00e8 00D1     		bne	.LCB258
 305 00ea 8FE7     		b	.L10	@long jump
 306              	.LCB258:
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 307              		.loc 1 321 0
 308 00ec FFF7FEFF 		bl	HAL_GetTick
 309              	.LVL18:
 310 00f0 C01B     		subs	r0, r0, r7
 311 00f2 6428     		cmp	r0, #100
 312 00f4 F6D9     		bls	.L15
 313 00f6 E4E7     		b	.L19
 314              	.LVL19:
 315              	.L14:
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 316              		.loc 1 295 0 discriminator 4
 317 00f8 052B     		cmp	r3, #5
 318 00fa 05D1     		bne	.L16
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 319              		.loc 1 295 0 is_stmt 0 discriminator 5
 320 00fc 8023     		movs	r3, #128
 321 00fe 2268     		ldr	r2, [r4]
 322 0100 DB02     		lsls	r3, r3, #11
 323 0102 1343     		orrs	r3, r2
 324 0104 2360     		str	r3, [r4]
 325 0106 CAE7     		b	.L99
 326              	.L16:
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 327              		.loc 1 295 0 discriminator 6
 328 0108 2368     		ldr	r3, [r4]
 329 010a 7F4A     		ldr	r2, .L100+4
 330 010c 1340     		ands	r3, r2
 331 010e 2360     		str	r3, [r4]
 332 0110 2368     		ldr	r3, [r4]
 333 0112 7E4A     		ldr	r2, .L100+8
 334 0114 1340     		ands	r3, r2
 335 0116 C6E7     		b	.L97
 336              	.LVL20:
 337              	.L6:
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 338              		.loc 1 337 0 is_stmt 1
 339 0118 0C22     		movs	r2, #12
 340 011a 7A4C     		ldr	r4, .L100
 341 011c 6368     		ldr	r3, [r4, #4]
 342 011e 1342     		tst	r3, r2
 343 0120 06D0     		beq	.L22
ARM GAS  /tmp/cc7mRyRM.s 			page 20


 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 344              		.loc 1 338 0
 345 0122 6368     		ldr	r3, [r4, #4]
 346 0124 1340     		ands	r3, r2
 347 0126 082B     		cmp	r3, #8
 348 0128 10D1     		bne	.L23
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 349              		.loc 1 338 0 is_stmt 0 discriminator 1
 350 012a 6368     		ldr	r3, [r4, #4]
 351 012c DB03     		lsls	r3, r3, #15
 352 012e 0DD4     		bmi	.L23
 353              	.L22:
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 354              		.loc 1 341 0 is_stmt 1
 355 0130 2368     		ldr	r3, [r4]
 356 0132 9B07     		lsls	r3, r3, #30
 357 0134 02D5     		bpl	.L95
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 358              		.loc 1 341 0 is_stmt 0 discriminator 1
 359 0136 EB68     		ldr	r3, [r5, #12]
 360 0138 012B     		cmp	r3, #1
 361 013a AAD1     		bne	.L25
 362              	.L95:
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 363              		.loc 1 373 0 is_stmt 1
 364 013c F821     		movs	r1, #248
 365 013e 2268     		ldr	r2, [r4]
 366 0140 2B69     		ldr	r3, [r5, #16]
 367 0142 8A43     		bics	r2, r1
 368 0144 DB00     		lsls	r3, r3, #3
 369 0146 1343     		orrs	r3, r2
 370 0148 2360     		str	r3, [r4]
 371 014a 63E7     		b	.L21
 372              	.L23:
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 373              		.loc 1 355 0
 374 014c EA68     		ldr	r2, [r5, #12]
 375 014e 0123     		movs	r3, #1
 376 0150 002A     		cmp	r2, #0
 377 0152 0FD0     		beq	.L26
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 378              		.loc 1 358 0
 379 0154 2268     		ldr	r2, [r4]
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 380              		.loc 1 364 0
 381 0156 0226     		movs	r6, #2
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 382              		.loc 1 358 0
 383 0158 1343     		orrs	r3, r2
 384 015a 2360     		str	r3, [r4]
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 385              		.loc 1 361 0
 386 015c FFF7FEFF 		bl	HAL_GetTick
 387              	.LVL21:
 388 0160 0700     		movs	r7, r0
 389              	.LVL22:
 390              	.L27:
ARM GAS  /tmp/cc7mRyRM.s 			page 21


 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 391              		.loc 1 364 0
 392 0162 2368     		ldr	r3, [r4]
 393 0164 3342     		tst	r3, r6
 394 0166 E9D1     		bne	.L95
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 395              		.loc 1 366 0
 396 0168 FFF7FEFF 		bl	HAL_GetTick
 397              	.LVL23:
 398 016c C01B     		subs	r0, r0, r7
 399 016e 0228     		cmp	r0, #2
 400 0170 F7D9     		bls	.L27
 401 0172 A6E7     		b	.L19
 402              	.LVL24:
 403              	.L26:
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 404              		.loc 1 378 0
 405 0174 2268     		ldr	r2, [r4]
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 406              		.loc 1 384 0
 407 0176 0226     		movs	r6, #2
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 408              		.loc 1 378 0
 409 0178 9A43     		bics	r2, r3
 410 017a 2260     		str	r2, [r4]
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 411              		.loc 1 381 0
 412 017c FFF7FEFF 		bl	HAL_GetTick
 413              	.LVL25:
 414 0180 0700     		movs	r7, r0
 415              	.LVL26:
 416              	.L29:
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 417              		.loc 1 384 0
 418 0182 2368     		ldr	r3, [r4]
 419 0184 3342     		tst	r3, r6
 420 0186 00D1     		bne	.LCB378
 421 0188 44E7     		b	.L21	@long jump
 422              	.LCB378:
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 423              		.loc 1 386 0
 424 018a FFF7FEFF 		bl	HAL_GetTick
 425              	.LVL27:
 426 018e C01B     		subs	r0, r0, r7
 427 0190 0228     		cmp	r0, #2
 428 0192 F6D9     		bls	.L29
 429 0194 95E7     		b	.L19
 430              	.LVL28:
 431              	.L31:
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 432              		.loc 1 401 0
 433 0196 EA69     		ldr	r2, [r5, #28]
 434 0198 0123     		movs	r3, #1
 435 019a 5A4C     		ldr	r4, .L100
 436 019c 002A     		cmp	r2, #0
 437 019e 10D0     		beq	.L34
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
ARM GAS  /tmp/cc7mRyRM.s 			page 22


 438              		.loc 1 404 0
 439 01a0 626A     		ldr	r2, [r4, #36]
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 440              		.loc 1 410 0
 441 01a2 0226     		movs	r6, #2
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 442              		.loc 1 404 0
 443 01a4 1343     		orrs	r3, r2
 444 01a6 6362     		str	r3, [r4, #36]
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 445              		.loc 1 407 0
 446 01a8 FFF7FEFF 		bl	HAL_GetTick
 447              	.LVL29:
 448 01ac 0700     		movs	r7, r0
 449              	.LVL30:
 450              	.L35:
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 451              		.loc 1 410 0
 452 01ae 636A     		ldr	r3, [r4, #36]
 453 01b0 3342     		tst	r3, r6
 454 01b2 00D0     		beq	.LCB410
 455 01b4 32E7     		b	.L37	@long jump
 456              	.LCB410:
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 457              		.loc 1 412 0
 458 01b6 FFF7FEFF 		bl	HAL_GetTick
 459              	.LVL31:
 460 01ba C01B     		subs	r0, r0, r7
 461 01bc 0228     		cmp	r0, #2
 462 01be F6D9     		bls	.L35
 463 01c0 7FE7     		b	.L19
 464              	.LVL32:
 465              	.L34:
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 466              		.loc 1 421 0
 467 01c2 626A     		ldr	r2, [r4, #36]
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 468              		.loc 1 427 0
 469 01c4 0226     		movs	r6, #2
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 470              		.loc 1 421 0
 471 01c6 9A43     		bics	r2, r3
 472 01c8 6262     		str	r2, [r4, #36]
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 473              		.loc 1 424 0
 474 01ca FFF7FEFF 		bl	HAL_GetTick
 475              	.LVL33:
 476 01ce 0700     		movs	r7, r0
 477              	.LVL34:
 478              	.L38:
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 479              		.loc 1 427 0
 480 01d0 636A     		ldr	r3, [r4, #36]
 481 01d2 3342     		tst	r3, r6
 482 01d4 00D1     		bne	.LCB435
 483 01d6 21E7     		b	.L37	@long jump
 484              	.LCB435:
ARM GAS  /tmp/cc7mRyRM.s 			page 23


 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 485              		.loc 1 429 0
 486 01d8 FFF7FEFF 		bl	HAL_GetTick
 487              	.LVL35:
 488 01dc C01B     		subs	r0, r0, r7
 489 01de 0228     		cmp	r0, #2
 490 01e0 F6D9     		bls	.L38
 491 01e2 6EE7     		b	.L19
 492              	.LVL36:
 493              	.L32:
 494              	.LBB4:
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 495              		.loc 1 446 0
 496 01e4 8022     		movs	r2, #128
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 497              		.loc 1 439 0
 498 01e6 0021     		movs	r1, #0
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 499              		.loc 1 446 0
 500 01e8 464C     		ldr	r4, .L100
 501 01ea 5205     		lsls	r2, r2, #21
 502 01ec E369     		ldr	r3, [r4, #28]
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 503              		.loc 1 439 0
 504 01ee 0091     		str	r1, [sp]
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 505              		.loc 1 446 0
 506 01f0 1342     		tst	r3, r2
 507 01f2 08D1     		bne	.L41
 508              	.LBB5:
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       pwrclkchanged = SET;
 509              		.loc 1 448 0
 510 01f4 E369     		ldr	r3, [r4, #28]
 511 01f6 1343     		orrs	r3, r2
 512 01f8 E361     		str	r3, [r4, #28]
 513 01fa E369     		ldr	r3, [r4, #28]
 514 01fc 1340     		ands	r3, r2
 515 01fe 0393     		str	r3, [sp, #12]
 516 0200 039B     		ldr	r3, [sp, #12]
 517              	.LVL37:
 518              	.LBE5:
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 519              		.loc 1 449 0
 520 0202 0123     		movs	r3, #1
 521 0204 0093     		str	r3, [sp]
 522              	.LVL38:
 523              	.L41:
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 524              		.loc 1 452 0
 525 0206 8027     		movs	r7, #128
 526 0208 414E     		ldr	r6, .L100+12
 527 020a 7F00     		lsls	r7, r7, #1
 528 020c 3368     		ldr	r3, [r6]
 529 020e 3B42     		tst	r3, r7
 530 0210 06D0     		beq	.L42
 531              	.L47:
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
ARM GAS  /tmp/cc7mRyRM.s 			page 24


 532              		.loc 1 470 0
 533 0212 AB68     		ldr	r3, [r5, #8]
 534 0214 012B     		cmp	r3, #1
 535 0216 13D1     		bne	.L94
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 536              		.loc 1 470 0 is_stmt 0 discriminator 1
 537 0218 226A     		ldr	r2, [r4, #32]
 538 021a 1343     		orrs	r3, r2
 539              	.L98:
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 540              		.loc 1 470 0 discriminator 6
 541 021c 2362     		str	r3, [r4, #32]
 542 021e 30E0     		b	.L48
 543              	.L42:
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 544              		.loc 1 455 0 is_stmt 1
 545 0220 3368     		ldr	r3, [r6]
 546 0222 3B43     		orrs	r3, r7
 547 0224 3360     		str	r3, [r6]
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 548              		.loc 1 458 0
 549 0226 FFF7FEFF 		bl	HAL_GetTick
 550              	.LVL39:
 551 022a 0190     		str	r0, [sp, #4]
 552              	.LVL40:
 553              	.L45:
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 554              		.loc 1 460 0
 555 022c 3368     		ldr	r3, [r6]
 556 022e 3B42     		tst	r3, r7
 557 0230 EFD1     		bne	.L47
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 558              		.loc 1 462 0
 559 0232 FFF7FEFF 		bl	HAL_GetTick
 560              	.LVL41:
 561 0236 019B     		ldr	r3, [sp, #4]
 562 0238 C01A     		subs	r0, r0, r3
 563 023a 6428     		cmp	r0, #100
 564 023c F6D9     		bls	.L45
 565 023e 40E7     		b	.L19
 566              	.LVL42:
 567              	.L94:
 568 0240 0122     		movs	r2, #1
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 569              		.loc 1 470 0 discriminator 2
 570 0242 002B     		cmp	r3, #0
 571 0244 14D1     		bne	.L49
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 572              		.loc 1 470 0 is_stmt 0 discriminator 3
 573 0246 236A     		ldr	r3, [r4, #32]
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 574              		.loc 1 492 0 is_stmt 1 discriminator 3
 575 0248 0227     		movs	r7, #2
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 576              		.loc 1 470 0 discriminator 3
 577 024a 9343     		bics	r3, r2
 578 024c 2362     		str	r3, [r4, #32]
ARM GAS  /tmp/cc7mRyRM.s 			page 25


 579 024e 236A     		ldr	r3, [r4, #32]
 580 0250 0332     		adds	r2, r2, #3
 581 0252 9343     		bics	r3, r2
 582 0254 2362     		str	r3, [r4, #32]
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 583              		.loc 1 489 0 discriminator 3
 584 0256 FFF7FEFF 		bl	HAL_GetTick
 585              	.LVL43:
 586 025a 0600     		movs	r6, r0
 587              	.LVL44:
 588              	.L50:
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 589              		.loc 1 492 0
 590 025c 236A     		ldr	r3, [r4, #32]
 591 025e 3B42     		tst	r3, r7
 592 0260 25D0     		beq	.L55
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 593              		.loc 1 494 0
 594 0262 FFF7FEFF 		bl	HAL_GetTick
 595              	.LVL45:
 596 0266 2B4B     		ldr	r3, .L100+16
 597 0268 801B     		subs	r0, r0, r6
 598 026a 9842     		cmp	r0, r3
 599 026c F6D9     		bls	.L50
 600 026e 28E7     		b	.L19
 601              	.LVL46:
 602              	.L49:
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 603              		.loc 1 470 0 discriminator 4
 604 0270 052B     		cmp	r3, #5
 605 0272 0BD1     		bne	.L51
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 606              		.loc 1 470 0 is_stmt 0 discriminator 5
 607 0274 216A     		ldr	r1, [r4, #32]
 608 0276 013B     		subs	r3, r3, #1
 609 0278 0B43     		orrs	r3, r1
 610 027a 2362     		str	r3, [r4, #32]
 611 027c 236A     		ldr	r3, [r4, #32]
 612 027e 1A43     		orrs	r2, r3
 613 0280 2262     		str	r2, [r4, #32]
 614              	.L48:
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 615              		.loc 1 475 0 is_stmt 1
 616 0282 FFF7FEFF 		bl	HAL_GetTick
 617              	.LVL47:
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 618              		.loc 1 478 0
 619 0286 0227     		movs	r7, #2
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 620              		.loc 1 475 0
 621 0288 0600     		movs	r6, r0
 622              	.LVL48:
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 623              		.loc 1 478 0
 624 028a 0DE0     		b	.L74
 625              	.LVL49:
 626              	.L51:
ARM GAS  /tmp/cc7mRyRM.s 			page 26


 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 627              		.loc 1 470 0 discriminator 6
 628 028c 236A     		ldr	r3, [r4, #32]
 629 028e 9343     		bics	r3, r2
 630 0290 0422     		movs	r2, #4
 631 0292 2362     		str	r3, [r4, #32]
 632 0294 236A     		ldr	r3, [r4, #32]
 633 0296 9343     		bics	r3, r2
 634 0298 C0E7     		b	.L98
 635              	.LVL50:
 636              	.L52:
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 637              		.loc 1 480 0
 638 029a FFF7FEFF 		bl	HAL_GetTick
 639              	.LVL51:
 640 029e 1D4B     		ldr	r3, .L100+16
 641 02a0 801B     		subs	r0, r0, r6
 642 02a2 9842     		cmp	r0, r3
 643 02a4 00D9     		bls	.LCB591
 644 02a6 0CE7     		b	.L19	@long jump
 645              	.LCB591:
 646              	.L74:
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 647              		.loc 1 478 0
 648 02a8 236A     		ldr	r3, [r4, #32]
 649 02aa 3B42     		tst	r3, r7
 650 02ac F5D0     		beq	.L52
 651              	.L55:
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 652              		.loc 1 502 0
 653 02ae 009B     		ldr	r3, [sp]
 654 02b0 012B     		cmp	r3, #1
 655 02b2 00D0     		beq	.LCB602
 656 02b4 B6E6     		b	.L40	@long jump
 657              	.LCB602:
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 658              		.loc 1 504 0
 659 02b6 E369     		ldr	r3, [r4, #28]
 660 02b8 174A     		ldr	r2, .L100+20
 661 02ba 1340     		ands	r3, r2
 662 02bc E361     		str	r3, [r4, #28]
 663 02be B1E6     		b	.L40
 664              	.LVL52:
 665              	.L60:
 666              	.LBE4:
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 667              		.loc 1 530 0
 668 02c0 FFF7FEFF 		bl	HAL_GetTick
 669              	.LVL53:
 670 02c4 C01B     		subs	r0, r0, r7
 671 02c6 0228     		cmp	r0, #2
 672 02c8 00D8     		bhi	.LCB619
 673 02ca BEE6     		b	.L59	@long jump
 674              	.LCB619:
 675 02cc F9E6     		b	.L19
 676              	.LVL54:
 677              	.L58:
ARM GAS  /tmp/cc7mRyRM.s 			page 27


 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 678              		.loc 1 539 0
 679 02ce 0532     		adds	r2, r2, #5
 680 02d0 03D1     		bne	.L61
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 681              		.loc 1 542 0
 682 02d2 626B     		ldr	r2, [r4, #52]
 683 02d4 9A43     		bics	r2, r3
 684 02d6 6263     		str	r2, [r4, #52]
 685 02d8 BBE6     		b	.L96
 686              	.L61:
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 687              		.loc 1 550 0
 688 02da 626B     		ldr	r2, [r4, #52]
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 689              		.loc 1 559 0
 690 02dc 0226     		movs	r6, #2
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 691              		.loc 1 550 0
 692 02de 1343     		orrs	r3, r2
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 693              		.loc 1 553 0
 694 02e0 0122     		movs	r2, #1
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 695              		.loc 1 550 0
 696 02e2 6363     		str	r3, [r4, #52]
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 697              		.loc 1 553 0
 698 02e4 636B     		ldr	r3, [r4, #52]
 699 02e6 9343     		bics	r3, r2
 700 02e8 6363     		str	r3, [r4, #52]
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 701              		.loc 1 556 0
 702 02ea FFF7FEFF 		bl	HAL_GetTick
 703              	.LVL55:
 704 02ee 0700     		movs	r7, r0
 705              	.LVL56:
 706              	.L62:
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 707              		.loc 1 559 0
 708 02f0 636B     		ldr	r3, [r4, #52]
 709 02f2 3342     		tst	r3, r6
 710 02f4 00D1     		bne	.LCB652
 711 02f6 B3E6     		b	.L57	@long jump
 712              	.LCB652:
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 713              		.loc 1 561 0
 714 02f8 FFF7FEFF 		bl	HAL_GetTick
 715              	.LVL57:
 716 02fc C01B     		subs	r0, r0, r7
 717 02fe 0228     		cmp	r0, #2
 718 0300 F6D9     		bls	.L62
 719 0302 DEE6     		b	.L19
 720              	.L101:
 721              		.align	2
 722              	.L100:
 723 0304 00100240 		.word	1073876992
ARM GAS  /tmp/cc7mRyRM.s 			page 28


 724 0308 FFFFFEFF 		.word	-65537
 725 030c FFFFFBFF 		.word	-262145
 726 0310 00700040 		.word	1073770496
 727 0314 88130000 		.word	5000
 728 0318 FFFFFFEF 		.word	-268435457
 729              	.LVL58:
 730              	.L65:
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     { 
 731              		.loc 1 632 0
 732 031c 0C22     		movs	r2, #12
 733 031e 264C     		ldr	r4, .L102
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 734              		.loc 1 695 0
 735 0320 0120     		movs	r0, #1
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     { 
 736              		.loc 1 632 0
 737 0322 6368     		ldr	r3, [r4, #4]
 738 0324 1340     		ands	r3, r2
 739 0326 082B     		cmp	r3, #8
 740 0328 00D1     		bne	.LCB681
 741 032a B3E6     		b	.L93	@long jump
 742              	.LCB681:
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 743              		.loc 1 642 0
 744 032c 2368     		ldr	r3, [r4]
 745 032e 234A     		ldr	r2, .L102+4
 746 0330 1340     		ands	r3, r2
 747 0332 2360     		str	r3, [r4]
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 748              		.loc 1 634 0
 749 0334 0229     		cmp	r1, #2
 750 0336 2FD1     		bne	.L66
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 751              		.loc 1 645 0
 752 0338 FFF7FEFF 		bl	HAL_GetTick
 753              	.LVL59:
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 754              		.loc 1 648 0
 755 033c 8026     		movs	r6, #128
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 756              		.loc 1 645 0
 757 033e 0700     		movs	r7, r0
 758              	.LVL60:
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 759              		.loc 1 648 0
 760 0340 B604     		lsls	r6, r6, #18
 761              	.LVL61:
 762              	.L67:
 763 0342 2368     		ldr	r3, [r4]
 764 0344 3342     		tst	r3, r6
 765 0346 21D1     		bne	.L68
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 766              		.loc 1 657 0
 767 0348 0F22     		movs	r2, #15
 768 034a E36A     		ldr	r3, [r4, #44]
 769 034c 9343     		bics	r3, r2
 770 034e EA6A     		ldr	r2, [r5, #44]
ARM GAS  /tmp/cc7mRyRM.s 			page 29


 771 0350 1343     		orrs	r3, r2
 772 0352 E362     		str	r3, [r4, #44]
 773 0354 696A     		ldr	r1, [r5, #36]
 774 0356 AB6A     		ldr	r3, [r5, #40]
 775 0358 6268     		ldr	r2, [r4, #4]
 776 035a 0B43     		orrs	r3, r1
 777 035c 1849     		ldr	r1, .L102+8
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 778              		.loc 1 667 0
 779 035e 8025     		movs	r5, #128
 780              	.LVL62:
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 781              		.loc 1 657 0
 782 0360 0A40     		ands	r2, r1
 783 0362 1343     		orrs	r3, r2
 784 0364 6360     		str	r3, [r4, #4]
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 785              		.loc 1 661 0
 786 0366 8023     		movs	r3, #128
 787 0368 2268     		ldr	r2, [r4]
 788 036a 5B04     		lsls	r3, r3, #17
 789 036c 1343     		orrs	r3, r2
 790 036e 2360     		str	r3, [r4]
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 791              		.loc 1 664 0
 792 0370 FFF7FEFF 		bl	HAL_GetTick
 793              	.LVL63:
 794 0374 0600     		movs	r6, r0
 795              	.LVL64:
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 796              		.loc 1 667 0
 797 0376 AD04     		lsls	r5, r5, #18
 798              	.LVL65:
 799              	.L69:
 800 0378 2368     		ldr	r3, [r4]
 801 037a 2B42     		tst	r3, r5
 802 037c 00D0     		beq	.LCB734
 803 037e 73E6     		b	.L71	@long jump
 804              	.LCB734:
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 805              		.loc 1 669 0
 806 0380 FFF7FEFF 		bl	HAL_GetTick
 807              	.LVL66:
 808 0384 801B     		subs	r0, r0, r6
 809 0386 0228     		cmp	r0, #2
 810 0388 F6D9     		bls	.L69
 811 038a 9AE6     		b	.L19
 812              	.LVL67:
 813              	.L68:
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 814              		.loc 1 650 0
 815 038c FFF7FEFF 		bl	HAL_GetTick
 816              	.LVL68:
 817 0390 C01B     		subs	r0, r0, r7
 818 0392 0228     		cmp	r0, #2
 819 0394 D5D9     		bls	.L67
 820 0396 94E6     		b	.L19
ARM GAS  /tmp/cc7mRyRM.s 			page 30


 821              	.LVL69:
 822              	.L66:
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 823              		.loc 1 681 0
 824 0398 FFF7FEFF 		bl	HAL_GetTick
 825              	.LVL70:
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 826              		.loc 1 684 0
 827 039c 8025     		movs	r5, #128
 828              	.LVL71:
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 829              		.loc 1 681 0
 830 039e 0600     		movs	r6, r0
 831              	.LVL72:
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 832              		.loc 1 684 0
 833 03a0 AD04     		lsls	r5, r5, #18
 834              	.LVL73:
 835              	.L72:
 836 03a2 2368     		ldr	r3, [r4]
 837 03a4 2B42     		tst	r3, r5
 838 03a6 00D1     		bne	.LCB769
 839 03a8 5EE6     		b	.L71	@long jump
 840              	.LCB769:
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 841              		.loc 1 686 0
 842 03aa FFF7FEFF 		bl	HAL_GetTick
 843              	.LVL74:
 844 03ae 801B     		subs	r0, r0, r6
 845 03b0 0228     		cmp	r0, #2
 846 03b2 F6D9     		bls	.L72
 847 03b4 85E6     		b	.L19
 848              	.L103:
 849 03b6 C046     		.align	2
 850              	.L102:
 851 03b8 00100240 		.word	1073876992
 852 03bc FFFFFFFE 		.word	-16777217
 853 03c0 FFFFC2FF 		.word	-3997697
 854              		.cfi_endproc
 855              	.LFE36:
 857              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 858              		.align	1
 859              		.global	HAL_RCC_MCOConfig
 860              		.syntax unified
 861              		.code	16
 862              		.thumb_func
 863              		.fpu softvfp
 865              	HAL_RCC_MCOConfig:
 866              	.LFB38:
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
ARM GAS  /tmp/cc7mRyRM.s 			page 31


 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         currently used as system clock source.
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HAL status
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     (HCLK) of the device. */
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
ARM GAS  /tmp/cc7mRyRM.s 			page 32


 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSI48 is selected as System Clock Source */
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI48 ready flag */
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Get Start Tick */
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
ARM GAS  /tmp/cc7mRyRM.s 			page 33


 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI48)
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }      
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }    
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }    
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return HAL_OK;
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  /tmp/cc7mRyRM.s 			page 34


 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim   
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================  
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     frequencies.
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_MCOPRE)
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System Clock selected as MCO clock
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI14       HSI14 selected as MCO clock
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @if STM32F042x6
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F048xx
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F071xB
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F072xB
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F078xx
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F091xC
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F098xx
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F030x6
ARM GAS  /tmp/cc7mRyRM.s 			page 35


 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F030xC
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F031x6
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F038xx
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F070x6
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F070xB
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endif
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1   no division applied to MCO clock
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2   division by 2 applied to MCO clock
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4   division by 4 applied to MCO clock
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8   division by 8 applied to MCO clock
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_32  division by 32 applied to MCO clock
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_64  division by 64 applied to MCO clock
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_128 division by 128 applied to MCO clock
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #else
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI14       HSI14 selected as MCO clock
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 867              		.loc 1 986 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 24
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871              	.LVL75:
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   GPIO_InitTypeDef gpio;
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  /tmp/cc7mRyRM.s 			page 36


 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 872              		.loc 1 995 0
 873 0000 0223     		movs	r3, #2
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   GPIO_InitTypeDef gpio;
 874              		.loc 1 986 0
 875 0002 70B5     		push	{r4, r5, r6, lr}
 876              	.LCFI2:
 877              		.cfi_def_cfa_offset 16
 878              		.cfi_offset 4, -16
 879              		.cfi_offset 5, -12
 880              		.cfi_offset 6, -8
 881              		.cfi_offset 14, -4
 882 0004 86B0     		sub	sp, sp, #24
 883              	.LCFI3:
 884              		.cfi_def_cfa_offset 40
 885              		.loc 1 995 0
 886 0006 0293     		str	r3, [sp, #8]
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   GPIO_InitTypeDef gpio;
 887              		.loc 1 986 0
 888 0008 1600     		movs	r6, r2
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 889              		.loc 1 996 0
 890 000a 0133     		adds	r3, r3, #1
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 891              		.loc 1 998 0
 892 000c 8022     		movs	r2, #128
 893              	.LVL76:
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 894              		.loc 1 996 0
 895 000e 0493     		str	r3, [sp, #16]
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 896              		.loc 1 997 0
 897 0010 0023     		movs	r3, #0
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   GPIO_InitTypeDef gpio;
 898              		.loc 1 986 0
 899 0012 0D00     		movs	r5, r1
 900              	.LBB6:
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Alternate = GPIO_AF0_MCO;
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* MCO1 Clock Enable */
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 901              		.loc 1 1002 0
 902 0014 8021     		movs	r1, #128
 903              	.LVL77:
 904              	.LBE6:
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 905              		.loc 1 1004 0
 906 0016 9020     		movs	r0, #144
 907              	.LVL78:
ARM GAS  /tmp/cc7mRyRM.s 			page 37


 908              	.LBB7:
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 909              		.loc 1 1002 0
 910 0018 0C4C     		ldr	r4, .L105
 911              	.LBE7:
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Alternate = GPIO_AF0_MCO;
 912              		.loc 1 998 0
 913 001a 5200     		lsls	r2, r2, #1
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 914              		.loc 1 997 0
 915 001c 0393     		str	r3, [sp, #12]
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Alternate = GPIO_AF0_MCO;
 916              		.loc 1 998 0
 917 001e 0192     		str	r2, [sp, #4]
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 918              		.loc 1 999 0
 919 0020 0593     		str	r3, [sp, #20]
 920              	.LBB8:
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 921              		.loc 1 1002 0
 922 0022 6269     		ldr	r2, [r4, #20]
 923 0024 8902     		lsls	r1, r1, #10
 924 0026 0A43     		orrs	r2, r1
 925 0028 6261     		str	r2, [r4, #20]
 926 002a 6369     		ldr	r3, [r4, #20]
 927              	.LBE8:
 928              		.loc 1 1004 0
 929 002c C005     		lsls	r0, r0, #23
 930              	.LBB9:
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 931              		.loc 1 1002 0
 932 002e 0B40     		ands	r3, r1
 933 0030 0093     		str	r3, [sp]
 934              	.LBE9:
 935              		.loc 1 1004 0
 936 0032 01A9     		add	r1, sp, #4
 937              	.LBB10:
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 938              		.loc 1 1002 0
 939 0034 009B     		ldr	r3, [sp]
 940              	.LBE10:
 941              		.loc 1 1004 0
 942 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 943              	.LVL79:
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the MCO clock source */
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 944              		.loc 1 1007 0
 945 003a 6168     		ldr	r1, [r4, #4]
 946 003c 044B     		ldr	r3, .L105+4
 947 003e 1940     		ands	r1, r3
 948 0040 3143     		orrs	r1, r6
 949 0042 2943     		orrs	r1, r5
 950 0044 6160     		str	r1, [r4, #4]
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 951              		.loc 1 1008 0
 952 0046 06B0     		add	sp, sp, #24
ARM GAS  /tmp/cc7mRyRM.s 			page 38


 953              		@ sp needed
 954              	.LVL80:
 955              	.LVL81:
 956 0048 70BD     		pop	{r4, r5, r6, pc}
 957              	.L106:
 958 004a C046     		.align	2
 959              	.L105:
 960 004c 00100240 		.word	1073876992
 961 0050 FFFFFF80 		.word	-2130706433
 962              		.cfi_endproc
 963              	.LFE38:
 965              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 966              		.align	1
 967              		.global	HAL_RCC_EnableCSS
 968              		.syntax unified
 969              		.code	16
 970              		.thumb_func
 971              		.fpu softvfp
 973              	HAL_RCC_EnableCSS:
 974              	.LFB39:
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         the Cortex-M0 NMI (Non-Maskable Interrupt) exception vector.  
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 975              		.loc 1 1020 0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
 979              		@ link register save eliminated.
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
 980              		.loc 1 1021 0
 981 0000 8023     		movs	r3, #128
 982 0002 034A     		ldr	r2, .L108
 983 0004 1B03     		lsls	r3, r3, #12
 984 0006 1168     		ldr	r1, [r2]
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 985              		.loc 1 1022 0
 986              		@ sp needed
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
 987              		.loc 1 1021 0
 988 0008 0B43     		orrs	r3, r1
 989 000a 1360     		str	r3, [r2]
 990              		.loc 1 1022 0
 991 000c 7047     		bx	lr
 992              	.L109:
 993 000e C046     		.align	2
 994              	.L108:
 995 0010 00100240 		.word	1073876992
 996              		.cfi_endproc
ARM GAS  /tmp/cc7mRyRM.s 			page 39


 997              	.LFE39:
 999              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1000              		.align	1
 1001              		.global	HAL_RCC_DisableCSS
 1002              		.syntax unified
 1003              		.code	16
 1004              		.thumb_func
 1005              		.fpu softvfp
 1007              	HAL_RCC_DisableCSS:
 1008              	.LFB40:
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1009              		.loc 1 1029 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 0
 1012              		@ frame_needed = 0, uses_anonymous_args = 0
 1013              		@ link register save eliminated.
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_CSSON) ;
 1014              		.loc 1 1030 0
 1015 0000 024A     		ldr	r2, .L111
 1016 0002 0349     		ldr	r1, .L111+4
 1017 0004 1368     		ldr	r3, [r2]
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1018              		.loc 1 1031 0
 1019              		@ sp needed
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_CSSON) ;
 1020              		.loc 1 1030 0
 1021 0006 0B40     		ands	r3, r1
 1022 0008 1360     		str	r3, [r2]
 1023              		.loc 1 1031 0
 1024 000a 7047     		bx	lr
 1025              	.L112:
 1026              		.align	2
 1027              	.L111:
 1028 000c 00100240 		.word	1073876992
 1029 0010 FFFFF7FF 		.word	-524289
 1030              		.cfi_endproc
 1031              	.LFE40:
 1033              		.global	__aeabi_uidiv
 1034              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1035              		.align	1
 1036              		.global	HAL_RCC_GetSysClockFreq
 1037              		.syntax unified
 1038              		.code	16
 1039              		.thumb_func
 1040              		.fpu softvfp
 1042              	HAL_RCC_GetSysClockFreq:
 1043              	.LFB41:
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
ARM GAS  /tmp/cc7mRyRM.s 			page 40


1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         constant and the selected clock source:
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or depending on STM32F0xxxx devices either a value based
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           on HSI_VALUE divided by 2 or HSI_VALUE divided by PREDIV factor(*) multiplied by the 
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           PLL factor.
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f0xx_hal_conf.h file (default value
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *               in voltage and temperature.
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f0xx_hal_conf.h file (default value
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                have wrong result.
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                  
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         value for HSE crystal.
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval SYSCLK frequency
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1044              		.loc 1 1065 0
 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 32
 1047              		@ frame_needed = 0, uses_anonymous_args = 0
 1048 0000 70B5     		push	{r4, r5, r6, lr}
 1049              	.LCFI4:
 1050              		.cfi_def_cfa_offset 16
 1051              		.cfi_offset 4, -16
 1052              		.cfi_offset 5, -12
 1053              		.cfi_offset 6, -8
 1054              		.cfi_offset 14, -4
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 1055              		.loc 1 1066 0
 1056 0002 144C     		ldr	r4, .L120
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 1057              		.loc 1 1065 0
 1058 0004 88B0     		sub	sp, sp, #32
 1059              	.LCFI5:
 1060              		.cfi_def_cfa_offset 48
 1061              		.loc 1 1066 0
 1062 0006 1022     		movs	r2, #16
 1063 0008 2100     		movs	r1, r4
 1064 000a 6846     		mov	r0, sp
 1065 000c FFF7FEFF 		bl	memcpy
 1066              	.LVL82:
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                                          10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
ARM GAS  /tmp/cc7mRyRM.s 			page 41


 1067              		.loc 1 1068 0
 1068 0010 2100     		movs	r1, r4
 1069 0012 04AD     		add	r5, sp, #16
 1070 0014 1022     		movs	r2, #16
 1071 0016 1031     		adds	r1, r1, #16
 1072 0018 2800     		movs	r0, r5
 1073 001a FFF7FEFF 		bl	memcpy
 1074              	.LVL83:
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                                            9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 1075              		.loc 1 1077 0
 1076 001e 0C22     		movs	r2, #12
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 1077              		.loc 1 1074 0
 1078 0020 0D4E     		ldr	r6, .L120+4
 1079 0022 7368     		ldr	r3, [r6, #4]
 1080              	.LVL84:
 1081              		.loc 1 1077 0
 1082 0024 1A40     		ands	r2, r3
 1083 0026 082A     		cmp	r2, #8
 1084 0028 11D1     		bne	.L118
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER
 1085              		.loc 1 1086 0
 1086 002a 0F20     		movs	r0, #15
 1087 002c 6A46     		mov	r2, sp
 1088 002e 990C     		lsrs	r1, r3, #18
 1089 0030 0140     		ands	r1, r0
 1090 0032 545C     		ldrb	r4, [r2, r1]
 1091              	.LVL85:
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BIT
 1092              		.loc 1 1087 0
 1093 0034 F26A     		ldr	r2, [r6, #44]
 1094 0036 0240     		ands	r2, r0
 1095 0038 A95C     		ldrb	r1, [r5, r2]
 1096              	.LVL86:
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 1097              		.loc 1 1088 0
 1098 003a DB03     		lsls	r3, r3, #15
 1099 003c 05D5     		bpl	.L116
 1100              	.LVL87:
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
ARM GAS  /tmp/cc7mRyRM.s 			page 42


1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (HSE_VALUE / prediv) * pllmul;
 1101              		.loc 1 1091 0
 1102 003e 0748     		ldr	r0, .L120+8
 1103 0040 FFF7FEFF 		bl	__aeabi_uidiv
 1104              	.LVL88:
 1105              	.L119:
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI48_PREDIV)
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSI48)
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI48 used as PLL clock source : PLLCLK = HSI48/PREDIV * PLLMUL */
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (HSI48_VALUE / prediv) * pllmul;
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI48_PREDIV */
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) 
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (HSI_VALUE / prediv) * pllmul;
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #else
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (uint32_t)((HSI_VALUE >> 1U) * pllmul);
 1106              		.loc 1 1107 0
 1107 0044 6043     		muls	r0, r4
 1108              	.LVL89:
 1109              	.L113:
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = pllclk;
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI48:    /* HSI48 used as system clock source */
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSI48_VALUE;
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     default: /* HSI used as system clock */
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return sysclockfreq;
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1110              		.loc 1 1128 0
 1111 0046 08B0     		add	sp, sp, #32
 1112              		@ sp needed
 1113 0048 70BD     		pop	{r4, r5, r6, pc}
 1114              	.LVL90:
 1115              	.L116:
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif
 1116              		.loc 1 1107 0
 1117 004a 0548     		ldr	r0, .L120+12
 1118 004c FAE7     		b	.L119
ARM GAS  /tmp/cc7mRyRM.s 			page 43


 1119              	.LVL91:
 1120              	.L118:
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
 1121              		.loc 1 1081 0
 1122 004e 0348     		ldr	r0, .L120+8
 1123              	.LVL92:
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1124              		.loc 1 1127 0
 1125 0050 F9E7     		b	.L113
 1126              	.L121:
 1127 0052 C046     		.align	2
 1128              	.L120:
 1129 0054 00000000 		.word	.LANCHOR0
 1130 0058 00100240 		.word	1073876992
 1131 005c 00127A00 		.word	8000000
 1132 0060 00093D00 		.word	4000000
 1133              		.cfi_endproc
 1134              	.LFE41:
 1136              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1137              		.align	1
 1138              		.global	HAL_RCC_ClockConfig
 1139              		.syntax unified
 1140              		.code	16
 1141              		.thumb_func
 1142              		.fpu softvfp
 1144              	HAL_RCC_ClockConfig:
 1145              	.LFB37:
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 1146              		.loc 1 726 0
 1147              		.cfi_startproc
 1148              		@ args = 0, pretend = 0, frame = 8
 1149              		@ frame_needed = 0, uses_anonymous_args = 0
 1150              	.LVL93:
 1151 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1152              	.LCFI6:
 1153              		.cfi_def_cfa_offset 32
 1154              		.cfi_offset 0, -32
 1155              		.cfi_offset 1, -28
 1156              		.cfi_offset 2, -24
 1157              		.cfi_offset 4, -20
 1158              		.cfi_offset 5, -16
 1159              		.cfi_offset 6, -12
 1160              		.cfi_offset 7, -8
 1161              		.cfi_offset 14, -4
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 1162              		.loc 1 739 0
 1163 0002 0122     		movs	r2, #1
 1164 0004 434C     		ldr	r4, .L160
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 1165              		.loc 1 726 0
 1166 0006 0600     		movs	r6, r0
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 1167              		.loc 1 739 0
 1168 0008 2368     		ldr	r3, [r4]
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 1169              		.loc 1 726 0
 1170 000a 0F00     		movs	r7, r1
ARM GAS  /tmp/cc7mRyRM.s 			page 44


 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 1171              		.loc 1 739 0
 1172 000c 1340     		ands	r3, r2
 1173 000e 8B42     		cmp	r3, r1
 1174 0010 1CD3     		bcc	.L123
 1175              	.L126:
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 1176              		.loc 1 753 0
 1177 0012 3268     		ldr	r2, [r6]
 1178 0014 9307     		lsls	r3, r2, #30
 1179 0016 23D4     		bmi	.L124
 1180              	.LVL94:
 1181              	.L125:
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 1182              		.loc 1 760 0
 1183 0018 D307     		lsls	r3, r2, #31
 1184 001a 29D4     		bmi	.L128
 1185              	.LVL95:
 1186              	.L138:
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 1187              		.loc 1 851 0
 1188 001c 0123     		movs	r3, #1
 1189 001e 2268     		ldr	r2, [r4]
 1190 0020 1A40     		ands	r2, r3
 1191 0022 9742     		cmp	r7, r2
 1192 0024 67D3     		bcc	.L129
 1193              	.L130:
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 1194              		.loc 1 865 0
 1195 0026 3368     		ldr	r3, [r6]
 1196 0028 3B4C     		ldr	r4, .L160+4
 1197 002a 5B07     		lsls	r3, r3, #29
 1198 002c 6AD4     		bmi	.L144
 1199              	.L145:
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 1200              		.loc 1 872 0
 1201 002e FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1202              	.LVL96:
 1203 0032 6368     		ldr	r3, [r4, #4]
 1204 0034 394A     		ldr	r2, .L160+8
 1205 0036 1B06     		lsls	r3, r3, #24
 1206 0038 1B0F     		lsrs	r3, r3, #28
 1207 003a D35C     		ldrb	r3, [r2, r3]
 1208 003c D840     		lsrs	r0, r0, r3
 1209 003e 384B     		ldr	r3, .L160+12
 1210 0040 1860     		str	r0, [r3]
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 1211              		.loc 1 875 0
 1212 0042 0020     		movs	r0, #0
 1213 0044 FFF7FEFF 		bl	HAL_InitTick
 1214              	.LVL97:
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1215              		.loc 1 877 0
 1216 0048 0020     		movs	r0, #0
 1217 004a 08E0     		b	.L127
 1218              	.LVL98:
 1219              	.L123:
ARM GAS  /tmp/cc7mRyRM.s 			page 45


 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 1220              		.loc 1 742 0
 1221 004c 2368     		ldr	r3, [r4]
 1222 004e 9343     		bics	r3, r2
 1223 0050 0B43     		orrs	r3, r1
 1224 0052 2360     		str	r3, [r4]
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1225              		.loc 1 746 0
 1226 0054 2368     		ldr	r3, [r4]
 1227 0056 1340     		ands	r3, r2
 1228 0058 9942     		cmp	r1, r3
 1229 005a DAD0     		beq	.L126
 1230              	.LVL99:
 1231              	.L132:
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 1232              		.loc 1 748 0
 1233 005c 0120     		movs	r0, #1
 1234              	.L127:
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 1235              		.loc 1 878 0
 1236              		@ sp needed
 1237              	.LVL100:
 1238              	.LVL101:
 1239 005e FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 1240              	.LVL102:
 1241              	.L124:
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1242              		.loc 1 756 0
 1243 0060 F020     		movs	r0, #240
 1244              	.LVL103:
 1245 0062 2D49     		ldr	r1, .L160+4
 1246              	.LVL104:
 1247 0064 4B68     		ldr	r3, [r1, #4]
 1248 0066 8343     		bics	r3, r0
 1249 0068 B068     		ldr	r0, [r6, #8]
 1250 006a 0343     		orrs	r3, r0
 1251 006c 4B60     		str	r3, [r1, #4]
 1252 006e D3E7     		b	.L125
 1253              	.L128:
 1254 0070 294D     		ldr	r5, .L160+4
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1255              		.loc 1 765 0
 1256 0072 7268     		ldr	r2, [r6, #4]
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1257              		.loc 1 768 0
 1258 0074 2B68     		ldr	r3, [r5]
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1259              		.loc 1 765 0
 1260 0076 012A     		cmp	r2, #1
 1261 0078 1AD1     		bne	.L131
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1262              		.loc 1 768 0
 1263 007a 9B03     		lsls	r3, r3, #14
 1264 007c EED5     		bpl	.L132
 1265              	.L133:
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 1266              		.loc 1 802 0
ARM GAS  /tmp/cc7mRyRM.s 			page 46


 1267 007e 0321     		movs	r1, #3
 1268 0080 6B68     		ldr	r3, [r5, #4]
 1269 0082 8B43     		bics	r3, r1
 1270 0084 1343     		orrs	r3, r2
 1271 0086 6B60     		str	r3, [r5, #4]
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 1272              		.loc 1 805 0
 1273 0088 FFF7FEFF 		bl	HAL_GetTick
 1274              	.LVL105:
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1275              		.loc 1 807 0
 1276 008c 7368     		ldr	r3, [r6, #4]
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 1277              		.loc 1 805 0
 1278 008e 0190     		str	r0, [sp, #4]
 1279              	.LVL106:
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1280              		.loc 1 807 0
 1281 0090 012B     		cmp	r3, #1
 1282 0092 15D1     		bne	.L158
 1283              	.LVL107:
 1284              	.L135:
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1285              		.loc 1 809 0
 1286 0094 0C22     		movs	r2, #12
 1287 0096 6B68     		ldr	r3, [r5, #4]
 1288 0098 1340     		ands	r3, r2
 1289 009a 042B     		cmp	r3, #4
 1290 009c BED0     		beq	.L138
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1291              		.loc 1 811 0
 1292 009e FFF7FEFF 		bl	HAL_GetTick
 1293              	.LVL108:
 1294 00a2 019B     		ldr	r3, [sp, #4]
 1295 00a4 C01A     		subs	r0, r0, r3
 1296 00a6 1F4B     		ldr	r3, .L160+16
 1297 00a8 9842     		cmp	r0, r3
 1298 00aa F3D9     		bls	.L135
 1299              	.L141:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 1300              		.loc 1 813 0
 1301 00ac 0320     		movs	r0, #3
 1302 00ae D6E7     		b	.L127
 1303              	.LVL109:
 1304              	.L131:
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1305              		.loc 1 774 0
 1306 00b0 022A     		cmp	r2, #2
 1307 00b2 02D1     		bne	.L134
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1308              		.loc 1 777 0
 1309 00b4 9B01     		lsls	r3, r3, #6
 1310 00b6 E2D4     		bmi	.L133
 1311 00b8 D0E7     		b	.L132
 1312              	.L134:
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1313              		.loc 1 797 0
ARM GAS  /tmp/cc7mRyRM.s 			page 47


 1314 00ba 9B07     		lsls	r3, r3, #30
 1315 00bc DFD4     		bmi	.L133
 1316 00be CDE7     		b	.L132
 1317              	.LVL110:
 1318              	.L158:
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1319              		.loc 1 817 0
 1320 00c0 022B     		cmp	r3, #2
 1321 00c2 12D0     		beq	.L139
 1322              	.LVL111:
 1323              	.L140:
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1324              		.loc 1 841 0
 1325 00c4 0C22     		movs	r2, #12
 1326 00c6 6B68     		ldr	r3, [r5, #4]
 1327 00c8 1342     		tst	r3, r2
 1328 00ca A7D0     		beq	.L138
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1329              		.loc 1 843 0
 1330 00cc FFF7FEFF 		bl	HAL_GetTick
 1331              	.LVL112:
 1332 00d0 019B     		ldr	r3, [sp, #4]
 1333 00d2 C01A     		subs	r0, r0, r3
 1334 00d4 134B     		ldr	r3, .L160+16
 1335 00d6 9842     		cmp	r0, r3
 1336 00d8 F4D9     		bls	.L140
 1337 00da E7E7     		b	.L141
 1338              	.L142:
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1339              		.loc 1 821 0
 1340 00dc FFF7FEFF 		bl	HAL_GetTick
 1341              	.LVL113:
 1342 00e0 019B     		ldr	r3, [sp, #4]
 1343 00e2 C01A     		subs	r0, r0, r3
 1344 00e4 0F4B     		ldr	r3, .L160+16
 1345 00e6 9842     		cmp	r0, r3
 1346 00e8 E0D8     		bhi	.L141
 1347              	.L139:
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1348              		.loc 1 819 0
 1349 00ea 0C22     		movs	r2, #12
 1350 00ec 6B68     		ldr	r3, [r5, #4]
 1351 00ee 1340     		ands	r3, r2
 1352 00f0 082B     		cmp	r3, #8
 1353 00f2 F3D1     		bne	.L142
 1354 00f4 92E7     		b	.L138
 1355              	.LVL114:
 1356              	.L129:
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 1357              		.loc 1 854 0
 1358 00f6 2268     		ldr	r2, [r4]
 1359 00f8 9A43     		bics	r2, r3
 1360 00fa 2260     		str	r2, [r4]
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1361              		.loc 1 858 0
 1362 00fc 2268     		ldr	r2, [r4]
 1363 00fe 1A42     		tst	r2, r3
ARM GAS  /tmp/cc7mRyRM.s 			page 48


 1364 0100 ACD1     		bne	.L132
 1365 0102 90E7     		b	.L130
 1366              	.L144:
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1367              		.loc 1 868 0
 1368 0104 6368     		ldr	r3, [r4, #4]
 1369 0106 084A     		ldr	r2, .L160+20
 1370 0108 1340     		ands	r3, r2
 1371 010a F268     		ldr	r2, [r6, #12]
 1372 010c 1343     		orrs	r3, r2
 1373 010e 6360     		str	r3, [r4, #4]
 1374 0110 8DE7     		b	.L145
 1375              	.L161:
 1376 0112 C046     		.align	2
 1377              	.L160:
 1378 0114 00200240 		.word	1073881088
 1379 0118 00100240 		.word	1073876992
 1380 011c 00000000 		.word	AHBPrescTable
 1381 0120 00000000 		.word	SystemCoreClock
 1382 0124 88130000 		.word	5000
 1383 0128 FFF8FFFF 		.word	-1793
 1384              		.cfi_endproc
 1385              	.LFE37:
 1387              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1388              		.align	1
 1389              		.global	HAL_RCC_GetHCLKFreq
 1390              		.syntax unified
 1391              		.code	16
 1392              		.thumb_func
 1393              		.fpu softvfp
 1395              	HAL_RCC_GetHCLKFreq:
 1396              	.LFB42:
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * 
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         and updated within this function
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HCLK frequency
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1397              		.loc 1 1140 0
 1398              		.cfi_startproc
 1399              		@ args = 0, pretend = 0, frame = 0
 1400              		@ frame_needed = 0, uses_anonymous_args = 0
 1401              		@ link register save eliminated.
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return SystemCoreClock;
 1402              		.loc 1 1141 0
 1403 0000 014B     		ldr	r3, .L163
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1404              		.loc 1 1142 0
 1405              		@ sp needed
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return SystemCoreClock;
 1406              		.loc 1 1141 0
ARM GAS  /tmp/cc7mRyRM.s 			page 49


 1407 0002 1868     		ldr	r0, [r3]
 1408              		.loc 1 1142 0
 1409 0004 7047     		bx	lr
 1410              	.L164:
 1411 0006 C046     		.align	2
 1412              	.L163:
 1413 0008 00000000 		.word	SystemCoreClock
 1414              		.cfi_endproc
 1415              	.LFE42:
 1417              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1418              		.align	1
 1419              		.global	HAL_RCC_GetPCLK1Freq
 1420              		.syntax unified
 1421              		.code	16
 1422              		.thumb_func
 1423              		.fpu softvfp
 1425              	HAL_RCC_GetPCLK1Freq:
 1426              	.LFB43:
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval PCLK1 frequency
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1427              		.loc 1 1151 0
 1428              		.cfi_startproc
 1429              		@ args = 0, pretend = 0, frame = 0
 1430              		@ frame_needed = 0, uses_anonymous_args = 0
 1431              		@ link register save eliminated.
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNU
 1432              		.loc 1 1153 0
 1433 0000 044B     		ldr	r3, .L166
 1434 0002 054A     		ldr	r2, .L166+4
 1435 0004 5B68     		ldr	r3, [r3, #4]
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }    
 1436              		.loc 1 1154 0
 1437              		@ sp needed
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }    
 1438              		.loc 1 1153 0
 1439 0006 5B05     		lsls	r3, r3, #21
 1440 0008 5B0F     		lsrs	r3, r3, #29
 1441 000a D35C     		ldrb	r3, [r2, r3]
 1442 000c 034A     		ldr	r2, .L166+8
 1443 000e 1068     		ldr	r0, [r2]
 1444 0010 D840     		lsrs	r0, r0, r3
 1445              		.loc 1 1154 0
 1446 0012 7047     		bx	lr
 1447              	.L167:
 1448              		.align	2
 1449              	.L166:
 1450 0014 00100240 		.word	1073876992
 1451 0018 00000000 		.word	APBPrescTable
 1452 001c 00000000 		.word	SystemCoreClock
ARM GAS  /tmp/cc7mRyRM.s 			page 50


 1453              		.cfi_endproc
 1454              	.LFE43:
 1456              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1457              		.align	1
 1458              		.global	HAL_RCC_GetOscConfig
 1459              		.syntax unified
 1460              		.code	16
 1461              		.thumb_func
 1462              		.fpu softvfp
 1464              	HAL_RCC_GetOscConfig:
 1465              	.LFB44:
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * RCC configuration registers.
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * will be configured.
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1466              		.loc 1 1164 0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 0
 1469              		@ frame_needed = 0, uses_anonymous_args = 0
 1470              		@ link register save eliminated.
 1471              	.LVL115:
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
 1472              		.loc 1 1169 0
 1473 0000 1F23     		movs	r3, #31
 1474 0002 0360     		str	r3, [r0]
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI | RCC_OSCILLATORTYPE_HSI14;
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType |= RCC_OSCILLATORTYPE_HSI48;
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 1475              		.loc 1 1177 0
 1476 0004 244B     		ldr	r3, .L184
 1477 0006 1A68     		ldr	r2, [r3]
 1478 0008 5203     		lsls	r2, r2, #13
 1479 000a 10D5     		bpl	.L169
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 1480              		.loc 1 1179 0
 1481 000c 0522     		movs	r2, #5
 1482              	.L171:
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
ARM GAS  /tmp/cc7mRyRM.s 			page 51


1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 1483              		.loc 1 1191 0
 1484 000e 0121     		movs	r1, #1
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1485              		.loc 1 1187 0
 1486 0010 4260     		str	r2, [r0, #4]
 1487              		.loc 1 1191 0
 1488 0012 1A68     		ldr	r2, [r3]
 1489 0014 0A40     		ands	r2, r1
 1490 0016 11D0     		beq	.L172
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 1491              		.loc 1 1193 0
 1492 0018 C160     		str	r1, [r0, #12]
 1493              	.L173:
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_B
 1494              		.loc 1 1200 0
 1495 001a 1A68     		ldr	r2, [r3]
 1496 001c 1206     		lsls	r2, r2, #24
 1497 001e D20E     		lsrs	r2, r2, #27
 1498 0020 0261     		str	r2, [r0, #16]
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 1499              		.loc 1 1203 0
 1500 0022 1A6A     		ldr	r2, [r3, #32]
 1501 0024 5207     		lsls	r2, r2, #29
 1502 0026 0BD5     		bpl	.L174
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 1503              		.loc 1 1205 0
 1504 0028 0522     		movs	r2, #5
 1505              	.L176:
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 1506              		.loc 1 1213 0
 1507 002a 8260     		str	r2, [r0, #8]
 1508 002c 0DE0     		b	.L175
ARM GAS  /tmp/cc7mRyRM.s 			page 52


 1509              	.L169:
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 1510              		.loc 1 1181 0
 1511 002e 8021     		movs	r1, #128
 1512 0030 1A68     		ldr	r2, [r3]
 1513 0032 4902     		lsls	r1, r1, #9
 1514 0034 0A40     		ands	r2, r1
 1515 0036 EAD0     		beq	.L171
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1516              		.loc 1 1183 0
 1517 0038 0122     		movs	r2, #1
 1518 003a E8E7     		b	.L171
 1519              	.L172:
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1520              		.loc 1 1197 0
 1521 003c C260     		str	r2, [r0, #12]
 1522 003e ECE7     		b	.L173
 1523              	.L174:
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 1524              		.loc 1 1207 0
 1525 0040 0121     		movs	r1, #1
 1526 0042 1A6A     		ldr	r2, [r3, #32]
 1527 0044 0A40     		ands	r2, r1
 1528 0046 F0D0     		beq	.L176
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1529              		.loc 1 1209 0
 1530 0048 8160     		str	r1, [r0, #8]
 1531              	.L175:
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 1532              		.loc 1 1217 0
 1533 004a 0122     		movs	r2, #1
 1534 004c 596A     		ldr	r1, [r3, #36]
 1535 004e 1140     		ands	r1, r2
 1536 0050 1CD0     		beq	.L177
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 1537              		.loc 1 1219 0
 1538 0052 C261     		str	r2, [r0, #28]
 1539              	.L178:
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI14 configuration -----------------------------------------------*/
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR2 & RCC_CR2_HSI14ON) == RCC_CR2_HSI14ON)
 1540              		.loc 1 1227 0
 1541 0054 596B     		ldr	r1, [r3, #52]
 1542 0056 1140     		ands	r1, r2
 1543 0058 1AD0     		beq	.L179
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSI14State = RCC_HSI_ON;
 1544              		.loc 1 1229 0
ARM GAS  /tmp/cc7mRyRM.s 			page 53


 1545 005a 4261     		str	r2, [r0, #20]
 1546              	.L180:
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSI14State = RCC_HSI_OFF;
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSI14CalibrationValue = (uint32_t)((RCC->CR2 & RCC_CR2_HSI14TRIM) >> RCC_HSI14
 1547              		.loc 1 1236 0
 1548 005c 5A6B     		ldr	r2, [r3, #52]
 1549 005e 1206     		lsls	r2, r2, #24
 1550 0060 D20E     		lsrs	r2, r2, #27
 1551 0062 8261     		str	r2, [r0, #24]
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI48 configuration if any-----------------------------------------*/
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSI48State = __HAL_RCC_GET_HSI48_STATE();
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 1552              		.loc 1 1244 0
 1553 0064 1A68     		ldr	r2, [r3]
 1554 0066 D201     		lsls	r2, r2, #7
 1555 0068 14D5     		bpl	.L181
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 1556              		.loc 1 1246 0
 1557 006a 0222     		movs	r2, #2
 1558              	.L183:
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 1559              		.loc 1 1252 0
 1560 006c 8021     		movs	r1, #128
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1561              		.loc 1 1250 0
 1562 006e 0262     		str	r2, [r0, #32]
 1563              		.loc 1 1252 0
 1564 0070 5A68     		ldr	r2, [r3, #4]
 1565 0072 4902     		lsls	r1, r1, #9
 1566 0074 0A40     		ands	r2, r1
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
 1567              		.loc 1 1253 0
 1568 0076 F021     		movs	r1, #240
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
 1569              		.loc 1 1252 0
 1570 0078 4262     		str	r2, [r0, #36]
 1571              		.loc 1 1253 0
 1572 007a 5A68     		ldr	r2, [r3, #4]
 1573 007c 8903     		lsls	r1, r1, #14
 1574 007e 0A40     		ands	r2, r1
 1575 0080 8262     		str	r2, [r0, #40]
ARM GAS  /tmp/cc7mRyRM.s 			page 54


1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PREDIV = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV);
 1576              		.loc 1 1254 0
 1577 0082 0F22     		movs	r2, #15
 1578 0084 DB6A     		ldr	r3, [r3, #44]
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1579              		.loc 1 1255 0
 1580              		@ sp needed
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PREDIV = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV);
 1581              		.loc 1 1254 0
 1582 0086 1340     		ands	r3, r2
 1583 0088 C362     		str	r3, [r0, #44]
 1584              		.loc 1 1255 0
 1585 008a 7047     		bx	lr
 1586              	.L177:
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1587              		.loc 1 1223 0
 1588 008c C161     		str	r1, [r0, #28]
 1589 008e E1E7     		b	.L178
 1590              	.L179:
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1591              		.loc 1 1233 0
 1592 0090 4161     		str	r1, [r0, #20]
 1593 0092 E3E7     		b	.L180
 1594              	.L181:
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1595              		.loc 1 1250 0
 1596 0094 0122     		movs	r2, #1
 1597 0096 E9E7     		b	.L183
 1598              	.L185:
 1599              		.align	2
 1600              	.L184:
 1601 0098 00100240 		.word	1073876992
 1602              		.cfi_endproc
 1603              	.LFE44:
 1605              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 1606              		.align	1
 1607              		.global	HAL_RCC_GetClockConfig
 1608              		.syntax unified
 1609              		.code	16
 1610              		.thumb_func
 1611              		.fpu softvfp
 1613              	HAL_RCC_GetClockConfig:
 1614              	.LFB45:
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * RCC configuration registers.
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * contains the current clock configuration.
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1615              		.loc 1 1266 0
 1616              		.cfi_startproc
 1617              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc7mRyRM.s 			page 55


 1618              		@ frame_needed = 0, uses_anonymous_args = 0
 1619              	.LVL116:
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1;
 1620              		.loc 1 1272 0
 1621 0000 0723     		movs	r3, #7
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 1622              		.loc 1 1266 0
 1623 0002 10B5     		push	{r4, lr}
 1624              	.LCFI7:
 1625              		.cfi_def_cfa_offset 8
 1626              		.cfi_offset 4, -8
 1627              		.cfi_offset 14, -4
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 1628              		.loc 1 1275 0
 1629 0004 0324     		movs	r4, #3
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 1630              		.loc 1 1272 0
 1631 0006 0360     		str	r3, [r0]
 1632              		.loc 1 1275 0
 1633 0008 094B     		ldr	r3, .L187
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE);   
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1634              		.loc 1 1284 0
 1635              		@ sp needed
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 1636              		.loc 1 1275 0
 1637 000a 5A68     		ldr	r2, [r3, #4]
 1638 000c 2240     		ands	r2, r4
 1639 000e 4260     		str	r2, [r0, #4]
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 1640              		.loc 1 1278 0
 1641 0010 5A68     		ldr	r2, [r3, #4]
 1642 0012 ED34     		adds	r4, r4, #237
 1643 0014 2240     		ands	r2, r4
 1644 0016 8260     		str	r2, [r0, #8]
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
 1645              		.loc 1 1281 0
 1646 0018 E022     		movs	r2, #224
 1647 001a 5B68     		ldr	r3, [r3, #4]
 1648 001c D200     		lsls	r2, r2, #3
 1649 001e 1340     		ands	r3, r2
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1650              		.loc 1 1283 0
ARM GAS  /tmp/cc7mRyRM.s 			page 56


 1651 0020 0122     		movs	r2, #1
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
 1652              		.loc 1 1281 0
 1653 0022 C360     		str	r3, [r0, #12]
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1654              		.loc 1 1283 0
 1655 0024 034B     		ldr	r3, .L187+4
 1656 0026 1B68     		ldr	r3, [r3]
 1657 0028 1340     		ands	r3, r2
 1658 002a 0B60     		str	r3, [r1]
 1659              		.loc 1 1284 0
 1660 002c 10BD     		pop	{r4, pc}
 1661              	.L188:
 1662 002e C046     		.align	2
 1663              	.L187:
 1664 0030 00100240 		.word	1073876992
 1665 0034 00200240 		.word	1073881088
 1666              		.cfi_endproc
 1667              	.LFE45:
 1669              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 1670              		.align	1
 1671              		.weak	HAL_RCC_CSSCallback
 1672              		.syntax unified
 1673              		.code	16
 1674              		.thumb_func
 1675              		.fpu softvfp
 1677              	HAL_RCC_CSSCallback:
 1678              	.LFB47:
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval none
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1679              		.loc 1 1309 0
 1680              		.cfi_startproc
 1681              		@ args = 0, pretend = 0, frame = 0
 1682              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc7mRyRM.s 			page 57


 1683              		@ link register save eliminated.
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     the HAL_RCC_CSSCallback could be implemented in the user file
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     */ 
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1684              		.loc 1 1313 0
 1685              		@ sp needed
 1686 0000 7047     		bx	lr
 1687              		.cfi_endproc
 1688              	.LFE47:
 1690              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 1691              		.align	1
 1692              		.global	HAL_RCC_NMI_IRQHandler
 1693              		.syntax unified
 1694              		.code	16
 1695              		.thumb_func
 1696              		.fpu softvfp
 1698              	HAL_RCC_NMI_IRQHandler:
 1699              	.LFB46:
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 1700              		.loc 1 1292 0
 1701              		.cfi_startproc
 1702              		@ args = 0, pretend = 0, frame = 0
 1703              		@ frame_needed = 0, uses_anonymous_args = 0
 1704 0000 10B5     		push	{r4, lr}
 1705              	.LCFI8:
 1706              		.cfi_def_cfa_offset 8
 1707              		.cfi_offset 4, -8
 1708              		.cfi_offset 14, -4
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 1709              		.loc 1 1294 0
 1710 0002 8024     		movs	r4, #128
 1711 0004 044B     		ldr	r3, .L195
 1712 0006 9B68     		ldr	r3, [r3, #8]
 1713 0008 2342     		tst	r3, r4
 1714 000a 03D0     		beq	.L190
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 1715              		.loc 1 1297 0
 1716 000c FFF7FEFF 		bl	HAL_RCC_CSSCallback
 1717              	.LVL117:
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1718              		.loc 1 1300 0
 1719 0010 024B     		ldr	r3, .L195+4
 1720 0012 1C70     		strb	r4, [r3]
 1721              	.L190:
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 1722              		.loc 1 1302 0
 1723              		@ sp needed
 1724 0014 10BD     		pop	{r4, pc}
 1725              	.L196:
 1726 0016 C046     		.align	2
 1727              	.L195:
 1728 0018 00100240 		.word	1073876992
 1729 001c 0A100240 		.word	1073877002
 1730              		.cfi_endproc
 1731              	.LFE46:
 1733              		.section	.rodata
ARM GAS  /tmp/cc7mRyRM.s 			page 58


 1734              		.set	.LANCHOR0,. + 0
 1735              	.LC0:
 1736 0000 02       		.byte	2
 1737 0001 03       		.byte	3
 1738 0002 04       		.byte	4
 1739 0003 05       		.byte	5
 1740 0004 06       		.byte	6
 1741 0005 07       		.byte	7
 1742 0006 08       		.byte	8
 1743 0007 09       		.byte	9
 1744 0008 0A       		.byte	10
 1745 0009 0B       		.byte	11
 1746 000a 0C       		.byte	12
 1747 000b 0D       		.byte	13
 1748 000c 0E       		.byte	14
 1749 000d 0F       		.byte	15
 1750 000e 10       		.byte	16
 1751 000f 10       		.byte	16
 1752              	.LC1:
 1753 0010 01       		.byte	1
 1754 0011 02       		.byte	2
 1755 0012 03       		.byte	3
 1756 0013 04       		.byte	4
 1757 0014 05       		.byte	5
 1758 0015 06       		.byte	6
 1759 0016 07       		.byte	7
 1760 0017 08       		.byte	8
 1761 0018 09       		.byte	9
 1762 0019 0A       		.byte	10
 1763 001a 0B       		.byte	11
 1764 001b 0C       		.byte	12
 1765 001c 0D       		.byte	13
 1766 001d 0E       		.byte	14
 1767 001e 0F       		.byte	15
 1768 001f 10       		.byte	16
 1769              		.text
 1770              	.Letext0:
 1771              		.file 2 "/home/arthurdent/Programs/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/machin
 1772              		.file 3 "/home/arthurdent/Programs/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_s
 1773              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 1774              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 1775              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 1776              		.file 7 "/home/arthurdent/Programs/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/lo
 1777              		.file 8 "/home/arthurdent/Programs/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_t
 1778              		.file 9 "/home/arthurdent/Programs/gcc-arm-none-eabi-6-2017-q1-update/lib/gcc/arm-none-eabi/6.3.1/
 1779              		.file 10 "/home/arthurdent/Programs/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/r
 1780              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1781              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1782              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1783              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /tmp/cc7mRyRM.s 			page 59


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_rcc.c
     /tmp/cc7mRyRM.s:16     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/cc7mRyRM.s:23     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/cc7mRyRM.s:73     .text.HAL_RCC_DeInit:0000000000000034 $d
     /tmp/cc7mRyRM.s:83     .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/cc7mRyRM.s:90     .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/cc7mRyRM.s:723    .text.HAL_RCC_OscConfig:0000000000000304 $d
     /tmp/cc7mRyRM.s:732    .text.HAL_RCC_OscConfig:000000000000031c $t
     /tmp/cc7mRyRM.s:851    .text.HAL_RCC_OscConfig:00000000000003b8 $d
     /tmp/cc7mRyRM.s:858    .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/cc7mRyRM.s:865    .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/cc7mRyRM.s:960    .text.HAL_RCC_MCOConfig:000000000000004c $d
     /tmp/cc7mRyRM.s:966    .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/cc7mRyRM.s:973    .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/cc7mRyRM.s:995    .text.HAL_RCC_EnableCSS:0000000000000010 $d
     /tmp/cc7mRyRM.s:1000   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/cc7mRyRM.s:1007   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/cc7mRyRM.s:1028   .text.HAL_RCC_DisableCSS:000000000000000c $d
     /tmp/cc7mRyRM.s:1035   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/cc7mRyRM.s:1042   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/cc7mRyRM.s:1129   .text.HAL_RCC_GetSysClockFreq:0000000000000054 $d
     /tmp/cc7mRyRM.s:1137   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/cc7mRyRM.s:1144   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/cc7mRyRM.s:1378   .text.HAL_RCC_ClockConfig:0000000000000114 $d
     /tmp/cc7mRyRM.s:1388   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/cc7mRyRM.s:1395   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/cc7mRyRM.s:1413   .text.HAL_RCC_GetHCLKFreq:0000000000000008 $d
     /tmp/cc7mRyRM.s:1418   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/cc7mRyRM.s:1425   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/cc7mRyRM.s:1450   .text.HAL_RCC_GetPCLK1Freq:0000000000000014 $d
     /tmp/cc7mRyRM.s:1457   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/cc7mRyRM.s:1464   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/cc7mRyRM.s:1601   .text.HAL_RCC_GetOscConfig:0000000000000098 $d
     /tmp/cc7mRyRM.s:1606   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/cc7mRyRM.s:1613   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/cc7mRyRM.s:1664   .text.HAL_RCC_GetClockConfig:0000000000000030 $d
     /tmp/cc7mRyRM.s:1670   .text.HAL_RCC_CSSCallback:0000000000000000 $t
     /tmp/cc7mRyRM.s:1677   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/cc7mRyRM.s:1691   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/cc7mRyRM.s:1698   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/cc7mRyRM.s:1728   .text.HAL_RCC_NMI_IRQHandler:0000000000000018 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_GPIO_Init
__aeabi_uidiv
memcpy
HAL_InitTick
AHBPrescTable
APBPrescTable
